{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1201825733140549632",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "map.set doesn't accept Field parameter as Provable",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T11:59:22.0526388+04:00",
  "messages": [
    {
      "id": "1201825733140549632",
      "type": "Default",
      "timestamp": "2024-01-30T13:46:23.623+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I'm testing addAddress function of the smart contract using the following\n\nzkApp.addAddress(Field(3));\nzkApp.addAddress(Field(34));\n\nAnd the function signature for addAddress is the following @method addAddress(add_ress: Field)\n\n\nInside the function, I have the following \n\nconst map = new MerkleMap();\nconst key = Field(add_ress);\nconst defaultValue = Field(0);\n    \nmap.set(Field(key), defaultValue);\n\nHowever, this give me the following error and it fails.\n\nb.toBoolean() was called on a variable Bool `b` in provable code.\n    This is not supported, because variables represent an abstract computation, \n    which only carries actual values during proving, but not during compiling.\n\n    Also, reading out JS values means that whatever you're doing with those values will no longer be\n    linked to the original variable in the proof, which makes this pattern prone to security holes.\n\n    You can check whether your Bool is a variable or a constant by using b.isConstant().\n\n    To inspect values for debugging, use Provable.log(b). For more advanced use cases,\n    there is `Provable.asProver(() => { ... })` which allows you to use b.toBoolean() inside the callback.",
      "author": {
        "id": "543679579617755156",
        "name": "onurinanc",
        "discriminator": "0000",
        "nickname": "onurinanc",
        "color": "#E74C3C",
        "isBot": false,
        "roles": [
          {
            "id": "1204059991435251723",
            "name": "Technical Reviewer - Navigators",
            "color": "#E74C3C",
            "position": 105
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/embed/avatars/3.png"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1201927337147641916",
      "type": "Default",
      "timestamp": "2024-01-30T20:30:07.906+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@onurinanc I think MerkleMap is not designed as a provable implementation. The idea is that in your circuit, you're not building up merkle maps but only verifying lookups into the Map, using MerkleMapWitness",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "✅",
            "code": "white_check_mark",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/2705.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "543679579617755156",
              "name": "onurinanc",
              "discriminator": "0000",
              "nickname": "onurinanc",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/embed/avatars/3.png"
            }
          ]
        }
      ],
      "mentions": [
        {
          "id": "543679579617755156",
          "name": "onurinanc",
          "discriminator": "0000",
          "nickname": "onurinanc",
          "color": "#E74C3C",
          "isBot": false,
          "roles": [
            {
              "id": "1204059991435251723",
              "name": "Technical Reviewer - Navigators",
              "color": "#E74C3C",
              "position": 105
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/embed/avatars/3.png"
        }
      ]
    },
    {
      "id": "1201955841738014781",
      "type": "Default",
      "timestamp": "2024-01-30T22:23:23.93+04:00",
      "timestampEdited": "2024-01-30T22:23:29.581+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@onurinanc The merkle map is supposed to be off-chain but its current state is usually verified on-chain like gregor mentioned. Hence the witness and not another map inside the function or as a parameter",
      "author": {
        "id": "810793675033673730",
        "name": "br0wn_d3v",
        "discriminator": "0000",
        "nickname": "br0wnD3v",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1297496671890047037",
            "name": "Protokit",
            "color": "#FFFFFF",
            "position": 16
          },
          {
            "id": "740299734341910689",
            "name": "Server Booster",
            "color": null,
            "position": 15
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/810793675033673730/avatars/2db4ae0dbab7167c86c35b78d9c2faa8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "✅",
            "code": "white_check_mark",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/2705.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "543679579617755156",
              "name": "onurinanc",
              "discriminator": "0000",
              "nickname": "onurinanc",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/embed/avatars/3.png"
            }
          ]
        }
      ],
      "mentions": [
        {
          "id": "543679579617755156",
          "name": "onurinanc",
          "discriminator": "0000",
          "nickname": "onurinanc",
          "color": "#E74C3C",
          "isBot": false,
          "roles": [
            {
              "id": "1204059991435251723",
              "name": "Technical Reviewer - Navigators",
              "color": "#E74C3C",
              "position": 105
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/embed/avatars/3.png"
        }
      ]
    },
    {
      "id": "1201959750531551232",
      "type": "Default",
      "timestamp": "2024-01-30T22:38:55.859+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "If you want to create the map in a zkapp method, you can create map outside of the method provide the root and merkle witness as arguments to the method, and in method check that the map was constructed correctly.",
      "author": {
        "id": "141272134633783297",
        "name": "faseris",
        "discriminator": "0000",
        "nickname": "Faserisko",
        "color": "#E5DFBB",
        "isBot": false,
        "roles": [
          {
            "id": "1280898028529778789",
            "name": "Community Builder",
            "color": "#E5DFBB",
            "position": 26
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/141272134633783297/906de2260ca3617d3a9792834a64e3c8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "✅",
            "code": "white_check_mark",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/2705.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "543679579617755156",
              "name": "onurinanc",
              "discriminator": "0000",
              "nickname": "onurinanc",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/embed/avatars/3.png"
            }
          ]
        }
      ],
      "mentions": []
    }
  ],
  "messageCount": 4
}