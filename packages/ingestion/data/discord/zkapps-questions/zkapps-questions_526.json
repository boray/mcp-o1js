{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1179482557549662249",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "Cannot compile SmartContract returned by the function in case the SmartContract uses ZkProgram",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T12:53:56.5326371+04:00",
  "messages": [
    {
      "id": "1179482557549662249",
      "type": "Default",
      "timestamp": "2023-11-29T22:02:35.446+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I'm receiving the error message:\n```\n TreeVerifier.compile() depends on TreeCalculation, but we cannot find compilation output for TreeCalculation.\n    Try to run TreeCalculation.compile() first.\n\n      41 |   it(`should compile contracts`, async () => {\n      42 |     await TreeCalculation.compile();\n    > 43 |     await TreeVerifier.compile();\n         |                        ^\n      44 |   });\n      45 | });\n      46 |\n\n```\nwhen trying to compile SmartProgram and ZkProgram returned by the function. Both SmartProgram and ZkProgram use MerkleWitness, and the height of the Merkle Tree is the argument to the functions:\n```typescript\nimport { describe, expect, it } from \"@jest/globals\";\nimport { Field, MerkleWitness, ZkProgram, method, SmartContract } from \"o1js\";\n\nfunction TreeCalculationFunction(height: number) {\n  class MerkleTreeWitness extends MerkleWitness(height) {}\n\n  const TreeCalculation = ZkProgram({\n    name: \"TreeCalculation\",\n    publicInput: Field,\n\n    methods: {\n      check: {\n        privateInputs: [MerkleTreeWitness, Field],\n\n        method(root: Field, witness: MerkleTreeWitness, value: Field) {\n          const calculatedRoot = witness.calculateRoot(value);\n          calculatedRoot.assertEquals(root);\n        },\n      },\n    },\n  });\n  return TreeCalculation;\n}\n\nfunction TreeVerifierFunction(height: number) {\n  const TreeCalculation = TreeCalculationFunction(height);\n  class TreeProof extends ZkProgram.Proof(TreeCalculation) {}\n\n  class TreeVerifier extends SmartContract {\n    @method verifyRedactedTree(proof: TreeProof) {\n      proof.verify();\n    }\n  }\n  return TreeVerifier;\n}\n\nconst TreeCalculation = TreeCalculationFunction(4);\nconst TreeVerifier = TreeVerifierFunction(4);\n\ndescribe(`Merkle Tree contracts`, () => {\n  it(`should compile contracts`, async () => {\n    await TreeCalculation.compile();\n    await TreeVerifier.compile();\n  });\n});\n\n```",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1179484499743088751",
      "type": "Default",
      "timestamp": "2023-11-29T22:10:18.501+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "When I use plain SmartContract and ZkProgram, without them being generated by the function, everything works:\n```typescript\nimport { describe, expect, it } from \"@jest/globals\";\nimport { Field, MerkleWitness, ZkProgram, method, SmartContract } from \"o1js\";\n\nclass MerkleTreeWitness extends MerkleWitness(4) {}\n\nconst TreeCalculation = ZkProgram({\n  name: \"TreeCalculation\",\n  publicInput: Field,\n\n  methods: {\n    check: {\n      privateInputs: [MerkleTreeWitness, Field],\n\n      method(root: Field, witness: MerkleTreeWitness, value: Field) {\n        const calculatedRoot = witness.calculateRoot(value);\n        calculatedRoot.assertEquals(root);\n      },\n    },\n  },\n});\n\nclass TreeProof extends ZkProgram.Proof(TreeCalculation) {}\n\nclass TreeVerifier extends SmartContract {\n  @method verifyRedactedTree(proof: TreeProof) {\n    proof.verify();\n  }\n}\n\ndescribe(`Merkle Tree contract`, () => {\n  it(`should compile contracts`, async () => {\n    await TreeCalculation.compile();\n    await TreeVerifier.compile();\n  });\n});\n\n```",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1179484824839397456",
      "type": "Default",
      "timestamp": "2023-11-29T22:11:36.01+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "The question: **How can I generate the SmartContract and ZkProgram without repeating the code for each Merkle Tree height?**",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1179498483867201637",
      "type": "Default",
      "timestamp": "2023-11-29T23:05:52.576+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "It looks like the both contracts should be returned by the same function for it to work:\n```typescript\nimport { describe, expect, it } from \"@jest/globals\";\nimport { Field, MerkleWitness, ZkProgram, method, SmartContract } from \"o1js\";\n\nfunction TreeFunction(height: number) {\n  class MerkleTreeWitness extends MerkleWitness(height) {}\n  const TreeCalculation = ZkProgram({\n    name: \"TreeCalculation\",\n    publicInput: Field,\n\n    methods: {\n      check: {\n        privateInputs: [MerkleTreeWitness, Field],\n\n        method(root: Field, witness: MerkleTreeWitness, value: Field) {\n          const calculatedRoot = witness.calculateRoot(value);\n          calculatedRoot.assertEquals(root);\n        },\n      },\n    },\n  });\n\n  class TreeProof extends ZkProgram.Proof(TreeCalculation) {}\n\n  class TreeVerifier extends SmartContract {\n    @method verifyRedactedTree(proof: TreeProof) {\n      proof.verify();\n    }\n  }\n  return { calculation: TreeCalculation, verifier: TreeVerifier };\n}\n\nconst height = 5;\nconst { calculation: TreeCalculation, verifier: TreeVerifier } =\n  TreeFunction(height);\n\ndescribe(`Merkle Tree contract`, () => {\n  it(`should compile contracts`, async () => {\n    await TreeCalculation.compile();\n    await TreeVerifier.compile();\n  });\n});\n\n```\nThe code above works.\n\n@gregor  is it a bug or a feature?",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ]
    },
    {
      "id": "1179561299819110501",
      "type": "Default",
      "timestamp": "2023-11-30T03:15:29.066+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Seems like a weirdness of jest to me, can you reproduce the problem in a plain script ran with nodejs?",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1179707700477689906",
      "type": "Reply",
      "timestamp": "2023-11-30T12:57:13.703+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "The same error with plain typescript:\n```\n/Users/mike/Documents/DeFi/MinaNFT/minanft-lib/.yarn/cache/o1js-npm-0.14.2-66e53db98b-a1f7a03bab.zip/node_modules/o1js/dist/node/bindings/compiled/_node_bindings/snarky_js_node.bc.cjs:6815\n         throw err;\n         ^\n\nError: TreeVerifier.compile() depends on TreeCalculation, but we cannot find compilation output for TreeCalculation.\nTry to run TreeCalculation.compile() first.\n    at /Users/mike/Documents/DeFi/MinaNFT/minanft-lib/.yarn/cache/o1js-npm-0.14.2-66e53db98b-a1f7a03bab.zip/node_modules/o1js/dist/node/index.cjs:13636:15\n    at Array.map (<anonymous>)\n    at picklesRuleFromFunction (/Users/mike/Documents/DeFi/MinaNFT/minanft-lib/.yarn/cache/o1js-npm-0.14.2-66e53db98b-a1f7a03bab.zip/node_modules/o1js/dist/node/index.cjs:13629:34)\n    at /Users/mike/Documents/DeFi/MinaNFT/minanft-lib/.yarn/cache/o1js-npm-0.14.2-66e53db98b-a1f7a03bab.zip/node_modules/o1js/dist/node/index.cjs:13509:52\n    at Array.map (<anonymous>)\n    at compileProgram (/Users/mike/Documents/DeFi/MinaNFT/minanft-lib/.yarn/cache/o1js-npm-0.14.2-66e53db98b-a1f7a03bab.zip/node_modules/o1js/dist/node/index.cjs:13509:27)\n    at Function.compile (/Users/mike/Documents/DeFi/MinaNFT/minanft-lib/.yarn/cache/o1js-npm-0.14.2-66e53db98b-a1f7a03bab.zip/node_modules/o1js/dist/node/index.cjs:15166:81)\n    at main (/Users/mike/Documents/DeFi/MinaNFT/minanft-lib/experimental/treecompile.ts:40:22)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n\nNode.js v20.8.1\n\n```\nusing the code \n```typescript\nimport { Field, MerkleWitness, ZkProgram, method, SmartContract } from \"o1js\";\n\nfunction TreeCalculationFunction(height: number) {\n  class MerkleTreeWitness extends MerkleWitness(height) {}\n\n  const TreeCalculation = ZkProgram({\n    name: \"TreeCalculation\",\n    publicInput: Field,\n\n    methods: {\n      check: {\n        privateInputs: [MerkleTreeWitness, Field],\n\n        method(root: Field, witness: MerkleTreeWitness, value: Field) {\n          const calculatedRoot = witness.calculateRoot(value);\n          calculatedRoot.assertEquals(root);\n        },\n      },\n    },\n  });\n  return TreeCalculation;\n}\n\nfunction TreeVerifierFunction(height: number) {\n  const TreeCalculation = TreeCalculationFunction(height);\n  class TreeProof extends ZkProgram.Proof(TreeCalculation) {}\n\n  class TreeVerifier extends SmartContract {\n    @method verifyRedactedTree(proof: TreeProof) {\n      proof.verify();\n    }\n  }\n  return TreeVerifier;\n}\n\nasync function main() {\n  const TreeCalculation = TreeCalculationFunction(4);\n  const TreeVerifier = TreeVerifierFunction(4);\n  await TreeCalculation.compile();\n  await TreeVerifier.compile();\n}\n\nmain();\n```",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1179561299819110501",
        "channelId": "1179482557549662249",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1179709085256536124",
      "type": "Default",
      "timestamp": "2023-11-30T13:02:43.86+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I am still not sure it is a bug, as this behavior has some logic. When I create several interconnected contracts inside the function, the SmartContract should ensure it relates to the proper ZkProgram.",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1179778966018588784",
      "type": "Default",
      "timestamp": "2023-11-30T17:40:24.732+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "aah I see now -- right, it doesn't work because the zkprogram you compiled is not the same JS value as the one your contract takes",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1179779010994110536",
      "type": "Default",
      "timestamp": "2023-11-30T17:40:35.455+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "didn't realize this earlier",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1179779186370551868",
      "type": "Default",
      "timestamp": "2023-11-30T17:41:17.268+04:00",
      "timestampEdited": "2023-11-30T17:41:27.835+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "not a bug. not sure it's a feature either \uD83D\uDE1B but an expected inconvenience \uD83D\uDE42",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 2,
          "users": [
            {
              "id": "964566918482784306",
              "name": "dfst.io",
              "discriminator": "0000",
              "nickname": "DFST",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
            },
            {
              "id": "991037531615264808",
              "name": "berzanorg",
              "discriminator": "0000",
              "nickname": "berzan",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/991037531615264808/3ef91bfa9b67c5315e5c06f752a83ed9.png?size=512"
            }
          ]
        },
        {
          "emoji": {
            "id": "",
            "name": "\uD83E\uDD23",
            "code": "rofl",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f923.svg"
          },
          "count": 2,
          "users": [
            {
              "id": "964566918482784306",
              "name": "dfst.io",
              "discriminator": "0000",
              "nickname": "DFST",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
            },
            {
              "id": "991037531615264808",
              "name": "berzanorg",
              "discriminator": "0000",
              "nickname": "berzan",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/991037531615264808/3ef91bfa9b67c5315e5c06f752a83ed9.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1180059843176972320",
      "type": "Reply",
      "timestamp": "2023-12-01T12:16:31.065+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Btw, is it possible, in principle, to serialize ZkProgram to pass it to the backend as a JSON object for recursive proofs calculation, or backend should be recompiled every time ZkProgram is updated or a new ZkProgram is added?",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1179778966018588784",
        "channelId": "1179482557549662249",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1180805203457482762",
      "type": "Reply",
      "timestamp": "2023-12-03T13:38:18.804+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "You mean, instead of creating the zkprogram methods from code, create them from a serialized object?",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "964566918482784306",
          "name": "dfst.io",
          "discriminator": "0000",
          "nickname": "DFST",
          "color": "#FA7504",
          "isBot": false,
          "roles": [
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "1150768164850913322",
              "name": "zkIgnite Cohort 2",
              "color": "#E97404",
              "position": 96
            },
            {
              "id": "1285544625037115557",
              "name": "MinaCon",
              "color": "#FAFFD6",
              "position": 25
            },
            {
              "id": "1205541869375979601",
              "name": "UMT",
              "color": "#FFFFFF",
              "position": 22
            },
            {
              "id": "1220065449098743838",
              "name": "Node-Operations",
              "color": "#FFFFFF",
              "position": 20
            },
            {
              "id": "1220064445863038996",
              "name": "zkApps",
              "color": "#FFFFFF",
              "position": 19
            },
            {
              "id": "1220065628602503188",
              "name": "Testing",
              "color": "#FFFFFF",
              "position": 18
            },
            {
              "id": "1291345674213920768",
              "name": "Rust-Node",
              "color": "#FFF7F7",
              "position": 17
            },
            {
              "id": "1259816280605851648",
              "name": "Links and Images",
              "color": "#FFFFFE",
              "position": 12
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1180059843176972320",
        "channelId": "1179482557549662249",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1180805531745648750",
      "type": "Default",
      "timestamp": "2023-12-03T13:39:37.074+04:00",
      "timestampEdited": "2023-12-03T13:39:48.937+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "It's not possible in general because a zkprogram method can contain arbitrary JS which is used to compute witnesses in the prover. So the prover is fundamentally not serializable",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1180805744401055865",
      "type": "Reply",
      "timestamp": "2023-12-03T13:40:27.775+04:00",
      "timestampEdited": "2023-12-03T13:40:45.224+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Yes, create ZkProgram on the local computer, then call JSON.stringify(ZkProgram.toJSON()), send this string to AWS lambda, and call ZkProgram.fromJSON(JSON.parse(str)).compile()",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1180805203457482762",
        "channelId": "1179482557549662249",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1180806369914396742",
      "type": "Default",
      "timestamp": "2023-12-03T13:42:56.909+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Got it. It's a similar problem to sending an arbitrary JS function to a backend. It does work for some functions - by stringifying their code (fun.toString()) -- but breaks if they are not self contained, e.g. use something from their closure, which most functions do",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1180806798312218704",
      "type": "Reply",
      "timestamp": "2023-12-03T13:44:39.047+04:00",
      "timestampEdited": "2023-12-03T13:44:53.326+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "So in this case we should look somewhere to dynamic imports, like calling require(\"MyZkProgram\") in JS code",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1180806369914396742",
        "channelId": "1179482557549662249",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1180806902532292699",
      "type": "Default",
      "timestamp": "2023-12-03T13:45:03.895+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Yeah. You could probably make it work to send a full JS bundle to the backend and require it dynamically",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1180807251318026412",
      "type": "Default",
      "timestamp": "2023-12-03T13:46:27.052+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Probably that bundle should not contain o1js \uD83D\uDE04",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1180807273833042010",
      "type": "Default",
      "timestamp": "2023-12-03T13:46:32.42+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Because it's so big",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "964566918482784306",
              "name": "dfst.io",
              "discriminator": "0000",
              "nickname": "DFST",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1181150533164216371",
      "type": "Reply",
      "timestamp": "2023-12-04T12:30:31.822+04:00",
      "timestampEdited": "2023-12-04T12:45:01.847+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "There is no need to include o1js in the bundle; it can also be loaded dynamically. In my tests, o1js dynamic loading takes 1.532 seconds. All that is needed is to put a small 2KB .js file into the AWS S3 bucket.\n\nFor it to work, I import o1js two times - first using `import type` to make TypeScript code compile and then, on AWS lambda `await import` to actually load it.\n\nThe following code works and successfully compiles ZkProgram and SmartContract on AWS lambda. It is being called as\n```typescript\nawait example(\"contracts\", \"TreeFunction\", 5);\n```\nFirst, it copies contracts.js from S3 to lambda instance /tmp folder, then dynamically imports both contracts.js and o1js, calls the TreeFunction that returns ZkProgram and SmartContract, and compiles both of them:\n```typescript\nconst { PROVER_KEYS_BUCKET } = process.env;\n\nexport async function example(\n  contractName: string,\n  functionName: string,\n  height: number\n) {\n  const contractsDir = \"/tmp/contracts\";\n  const files = [contractName + \".js\"];\n  // Copy compiled from TypeScript to JavaScript source code of the contracts\n  // from S3 bucket to AWS lambda /tmp/contracts folder\n  await loadCache(PROVER_KEYS_BUCKET!, contractsDir, files);\n  await listFiles(contractsDir);\n\n  const contracts = await import(contractsDir + \"/\" + contractName);\n  const o1js = await import(\"o1js\");\n  const { TreeCalculation, TreeVerifier } = await contracts[functionName](height, o1js);\n  await TreeCalculation.compile();\n  await TreeVerifier.compile();\n}\n```\nThe contracts.js is compiled from contracts.ts:\n```typescript\nimport type {\n  Field,\n  MerkleWitness,\n  ZkProgram,\n  method,\n  SmartContract,\n} from \"o1js\";\nimport type * as O1js from \"o1js\";\n\nexport async function TreeFunction(height: number, o1js: O1js) {\n  const { Field, MerkleWitness, ZkProgram, method, SmartContract } = o1js;\n\n  class MerkleTreeWitness extends MerkleWitness(height) {}\n  const TreeCalculation = ZkProgram({\n    name: \"TreeCalculation\",\n    publicInput: Field,\n\n    methods: {\n      check: {\n        privateInputs: [MerkleTreeWitness, Field],\n\n        method(root: Field, witness: MerkleTreeWitness, value: Field) {\n          const calculatedRoot = witness.calculateRoot(value);\n          root.assertEquals(calculatedRoot);\n        },\n      },\n    },\n  });\n\n  class TreeProof extends ZkProgram.Proof(TreeCalculation) {}\n\n  class TreeVerifier extends SmartContract {\n    @method verifyRedactedTree(proof: TreeProof) {\n      proof.verify();\n    }\n  }\n  return { TreeCalculation, TreeVerifier };\n}\n```\nTo summarize, instead of serializing ZkProgram/SmartContract to be sent to the backend, it is possible to send plain JS code of the ZkProgram/SmartContract to the backend and compute an unlimited number of recursive proofs)))",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDE4C",
            "code": "raised_hands",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f64c.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "568421780331692042",
              "name": "mitschabaude",
              "discriminator": "0000",
              "nickname": "gregor",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
            }
          ]
        }
      ],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1180807251318026412",
        "channelId": "1179482557549662249",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1181151375959265331",
      "type": "Default",
      "timestamp": "2023-12-04T12:33:52.76+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "btw if you want type-safety, you can probably add\n```ts\nimport type * as O1js from \"o1js\";\n\n// ...\n\nfunction TreeFunction(o1js: O1js) {\n  // ...\n}\n```",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "964566918482784306",
              "name": "dfst.io",
              "discriminator": "0000",
              "nickname": "DFST",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1181154606852620329",
      "type": "Reply",
      "timestamp": "2023-12-04T12:46:43.065+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I've amended the contracts.ts code. It works perfectly, and there is no need to redeploy the backend, I've just copied new contracts.js to S3 to make this change))",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDCAF",
            "code": "100",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f4af.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "568421780331692042",
              "name": "mitschabaude",
              "discriminator": "0000",
              "nickname": "gregor",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
            }
          ]
        }
      ],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1181151375959265331",
        "channelId": "1179482557549662249",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1181557601763348480",
      "type": "Reply",
      "timestamp": "2023-12-05T15:28:04.539+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@gregor  Can you please check my DM",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1181151375959265331",
        "channelId": "1179482557549662249",
        "guildId": "484437221055922177"
      }
    }
  ],
  "messageCount": 23
}