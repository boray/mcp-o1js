{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1080446576608149595",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "What is missing for off-chain data?",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T17:08:09.5662893+04:00",
  "messages": [
    {
      "id": "1080446576608149595",
      "type": "Default",
      "timestamp": "2023-03-01T15:08:57.59+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "If I wanted to get an off-chain KYC provider's output, and say check it against some logic privately, could this be done in Mina?\n\nLike I want to see if someone is over 18, they KYC, and I do some private computation and just pass over TRUE/FALSE instead of the age=",
      "author": {
        "id": "1047790885577949224",
        "name": "joakimeq",
        "discriminator": "0000",
        "nickname": "JoakimEQ",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1047790885577949224/59e326de1a36a0b9495ae193158a660d.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 2,
          "users": [
            {
              "id": "301752126491721730",
              "name": "blockbeard",
              "discriminator": "0000",
              "nickname": "angus_m",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/301752126491721730/0a8d7f37a46cb3c2ca757f772e60e497.png?size=512"
            },
            {
              "id": "511272055623122961",
              "name": "laurip",
              "discriminator": "0000",
              "nickname": "LauriP",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/511272055623122961/d57c3968960fb6a823b75cbd5530d6cf.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1080449690111311913",
      "type": "Default",
      "timestamp": "2023-03-01T15:21:19.907+04:00",
      "timestampEdited": "2023-03-01T15:28:55.488+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "So checking that a given number (private input to a SNARK) is > 18, and only outputting TRUE/FALSE, is trivial. It's just\n```ts\nage.assertGreaterThanOrEqual(18);\n```\nSo the interesting part is how you verify the authenticity of that `age`.\n\nThere is one solution that's possible right now, and is ideal: The KYC provider or some other trusted party signs the age, or some other message where the age can be parsed from.\nThen, in your SNARK, you both parse the age & check >18, and _verify the signature_. That means the KYC provider must use signatures that are supported by SnarkyJS though. There is one such signature scheme ATM. (Accessible as `Signature.create` in SnarkyJS)",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1080452006994518116",
      "type": "Default",
      "timestamp": "2023-03-01T15:30:32.295+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "yeah that's what I thought. Which kinda makes me think building this is kind \"boring\" from a utilizing Mina standpoint :p \n\nwonder if making a *standard* for taking web2 api outputs + perform computation makes more sense",
      "author": {
        "id": "1047790885577949224",
        "name": "joakimeq",
        "discriminator": "0000",
        "nickname": "JoakimEQ",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1047790885577949224/59e326de1a36a0b9495ae193158a660d.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1080452733108244500",
      "type": "Default",
      "timestamp": "2023-03-01T15:33:25.414+04:00",
      "timestampEdited": "2023-03-01T15:33:44.372+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Yeah I see what you mean, there's not much meat in the topic. The interesting part is the parsing of info out of arbitrary signed data. Like, parsing a JSON object. There is some initial, high-quality work on JSON parsing in this repo: https://github.com/gretzke/zkApp-data-types/tree/main/src",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "zkApp-data-types/src at main Â· gretzke/zkApp-data-types",
          "url": "https://github.com/gretzke/zkApp-data-types/tree/main/src",
          "timestamp": null,
          "description": "Contribute to gretzke/zkApp-data-types development by creating an account on GitHub.",
          "color": "#1E2327",
          "thumbnail": {
            "url": "https://images-ext-1.discordapp.net/external/3Bfv1GlO-fsPvNBT6QVyaxT6npj3Z2vrpsaBZbmuwCQ/https/opengraph.githubassets.com/4e00a694d08ef76debe149b170bca52530ecffea8ee8cd1a3ad2014f832758f8/gretzke/zkApp-data-types",
            "width": 1200,
            "height": 600
          },
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC40",
            "code": "eyes",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f440.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "1047790885577949224",
              "name": "joakimeq",
              "discriminator": "0000",
              "nickname": "JoakimEQ",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/1047790885577949224/59e326de1a36a0b9495ae193158a660d.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1080856426819354724",
      "type": "Default",
      "timestamp": "2023-03-02T18:17:33.495+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "About age and everything. Every KYC solution you can find actually report to service endpoint requested the KYC not the consumer/client side. Max they can get on their side is success or fail message. Considering this is it possible to get that data on client side. \n\nConsidering there is no other way. From my point we have 2 option.\n\n1)People KYC and the whomever deployed the Zkapp access to the api endpoint which have all users and run it through prover to put on chain. \n2)Zkapp build KYC-AML solution from scratch where they can sign and share more detail result on client side when they completed the KYC.",
      "author": {
        "id": "154964330880696320",
        "name": "e1emre",
        "discriminator": "0000",
        "nickname": "Emre | PICONBELLO",
        "color": "#FFD170",
        "isBot": false,
        "roles": [
          {
            "id": "692003893445656606",
            "name": "Genesis Founding Member",
            "color": "#FFD170",
            "position": 114
          },
          {
            "id": "918156487434596374",
            "name": "MinaResearch Founding Member",
            "color": "#A5BEF3",
            "position": 108
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "849712902709313547",
            "name": "node-working-group",
            "color": "#99AAB5",
            "position": 94
          },
          {
            "id": "1246045923654762496",
            "name": "berkeley-pre-release",
            "color": "#98C79F",
            "position": 84
          },
          {
            "id": "817478763088314389",
            "name": "RC Initiator",
            "color": null,
            "position": 83
          },
          {
            "id": "961225664575459328",
            "name": "dp-test-group",
            "color": "#98C79F",
            "position": 82
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "807079219691257886",
            "name": "spp",
            "color": null,
            "position": 76
          },
          {
            "id": "1240660664985321623",
            "name": "mainnet-archive-node",
            "color": "#2ECC71",
            "position": 42
          },
          {
            "id": "1224800471135289364",
            "name": "devnet-node-op",
            "color": "#57A14D",
            "position": 41
          },
          {
            "id": "1204126954199060570",
            "name": "UMT-SNARK-Worker",
            "color": "#2ECC71",
            "position": 36
          },
          {
            "id": "1204127002530156585",
            "name": "UMT-operator",
            "color": "#11806A",
            "position": 33
          },
          {
            "id": "1093202151607636080",
            "name": "TW2-Archivist",
            "color": "#037223",
            "position": 31
          },
          {
            "id": "1093205830293270578",
            "name": "TW2-Load Tester",
            "color": "#28A02B",
            "position": 29
          },
          {
            "id": "1093206126817968280",
            "name": "TW2-Operator",
            "color": "#72BE86",
            "position": 28
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          },
          {
            "id": "1227899957491535973",
            "name": "Delegation-Program",
            "color": "#FFFFFF",
            "position": 21
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1297496671890047037",
            "name": "Protokit",
            "color": "#FFFFFF",
            "position": 16
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/154964330880696320/7218fd543502e26fa184140d4590a57d.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1080858631291027486",
      "type": "Default",
      "timestamp": "2023-03-02T18:26:19.082+04:00",
      "timestampEdited": "2023-03-02T18:26:23.181+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "> Every KYC solution you can find actually report to service endpoint requested the KYC not the consumer/client side. \ncan you elaborate on that? Aren't KYC solutions which are reporting to a service endpoint also available on the client side by fetching from those service endpoints?",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1080900220193357895",
      "type": "Reply",
      "timestamp": "2023-03-02T21:11:34.649+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Not really because the client side only outputs like success fail review kind of outputs while the actual endpoint going to entity requiring the KYC having a endpoint connected to dashboard with everyones information for audit and reviews.",
      "author": {
        "id": "154964330880696320",
        "name": "e1emre",
        "discriminator": "0000",
        "nickname": "Emre | PICONBELLO",
        "color": "#FFD170",
        "isBot": false,
        "roles": [
          {
            "id": "692003893445656606",
            "name": "Genesis Founding Member",
            "color": "#FFD170",
            "position": 114
          },
          {
            "id": "918156487434596374",
            "name": "MinaResearch Founding Member",
            "color": "#A5BEF3",
            "position": 108
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "849712902709313547",
            "name": "node-working-group",
            "color": "#99AAB5",
            "position": 94
          },
          {
            "id": "1246045923654762496",
            "name": "berkeley-pre-release",
            "color": "#98C79F",
            "position": 84
          },
          {
            "id": "817478763088314389",
            "name": "RC Initiator",
            "color": null,
            "position": 83
          },
          {
            "id": "961225664575459328",
            "name": "dp-test-group",
            "color": "#98C79F",
            "position": 82
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "807079219691257886",
            "name": "spp",
            "color": null,
            "position": 76
          },
          {
            "id": "1240660664985321623",
            "name": "mainnet-archive-node",
            "color": "#2ECC71",
            "position": 42
          },
          {
            "id": "1224800471135289364",
            "name": "devnet-node-op",
            "color": "#57A14D",
            "position": 41
          },
          {
            "id": "1204126954199060570",
            "name": "UMT-SNARK-Worker",
            "color": "#2ECC71",
            "position": 36
          },
          {
            "id": "1204127002530156585",
            "name": "UMT-operator",
            "color": "#11806A",
            "position": 33
          },
          {
            "id": "1093202151607636080",
            "name": "TW2-Archivist",
            "color": "#037223",
            "position": 31
          },
          {
            "id": "1093205830293270578",
            "name": "TW2-Load Tester",
            "color": "#28A02B",
            "position": 29
          },
          {
            "id": "1093206126817968280",
            "name": "TW2-Operator",
            "color": "#72BE86",
            "position": 28
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          },
          {
            "id": "1227899957491535973",
            "name": "Delegation-Program",
            "color": "#FFFFFF",
            "position": 21
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1297496671890047037",
            "name": "Protokit",
            "color": "#FFFFFF",
            "position": 16
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/154964330880696320/7218fd543502e26fa184140d4590a57d.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1080858631291027486",
        "channelId": "1080446576608149595",
        "guildId": "484437221055922177"
      }
    }
  ],
  "messageCount": 7
}