{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1173226616344825857",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "Recursive Proofs As Input: Public vs Private",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T12:48:38.9407895+04:00",
  "messages": [
    {
      "id": "1173226616344825857",
      "type": "Default",
      "timestamp": "2023-11-12T15:43:42.833+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Greetings,\n\nI'm seeking clarification on a specific aspect of handling recursive proofs in zero-knowledge circuits within O1JS. My question revolves around the visibility of a recursive proof when it's passed as a private input to a method. Here's my understanding:\n\nSuppose I pass a recursive proof as a private input while generating a proof in a method. In this process, I verify the recursive proof and then use its public output as a value in the method. My question is: Will the verifier be able to discern which circuit was passed as a private input in order to, for example, attest the source of the argument?\n\nFrom my understanding, and based on what I've read, the answer should be no. The specifics of the recursive proof used as a private input would not be visible in the final proof. If visibility of the original circuit is required, this would need to be passed as a public input.  Whether a recursive proof is provided as a private or public input in O1JS significantly affects its visibility and the information contained in the final ZK proof. A private input ensures the details of the proof are kept confidential and not included in the final public proof, whereas a public input makes the proofâ€™s details part of the publicly verifiable final proof. Is my understanding correct?\n\nThank you.",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173229353979629579",
      "type": "Default",
      "timestamp": "2023-11-12T15:54:35.536+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "short answer: yes, the circuit which accepts a proof as a private input, is tied to the verification key of the proof. so you know for sure which circuit was used to generate the proof",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "752915909538217995",
              "name": "lucidsamuel",
              "discriminator": "0000",
              "nickname": "LucidSamuel",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/752915909538217995/ae3323b7d38aa8031fe431bcb2fc775d.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1173232820592844800",
      "type": "Default",
      "timestamp": "2023-11-12T16:08:22.041+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@maht0rz thank you. In that case it appears that my understanding is incorrect. Just to double-confirm: even if the recursive proof is used as a private input, the verifier can still know which circuit exactly was passed as a private input, correct? If the verifier wanted to, they could identify the exact circuit proof that was passed as a private input, correct? What would be the benefit of making it a public input vs an output, would the verifier gain extra visibility?",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "374663548174991362",
          "name": "maht0rz",
          "discriminator": "0000",
          "nickname": "maht0rz",
          "color": "#8B50FF",
          "isBot": false,
          "roles": [
            {
              "id": "846838836649525259",
              "name": "Mina Foundation",
              "color": "#8B50FF",
              "position": 138
            },
            {
              "id": "1146001284516827148",
              "name": "MF Engineering",
              "color": "#9B59B6",
              "position": 135
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "1090136219045867601",
              "name": "Gov Focus Group",
              "color": "#C02020",
              "position": 107
            },
            {
              "id": "1043261559478165567",
              "name": "ZK-peer-reviewer",
              "color": "#F87607",
              "position": 104
            },
            {
              "id": "1044272767060672624",
              "name": "Cohort 0 Mentor",
              "color": "#A84300",
              "position": 102
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "1121063832555634799",
              "name": "zkIgnite Cohort 1",
              "color": "#F38705",
              "position": 97
            },
            {
              "id": "754653466344947782",
              "name": "QA Task Force",
              "color": "#B2F3B8",
              "position": 80
            },
            {
              "id": "1083404176391929916",
              "name": "Mina Community Creator",
              "color": "#F68B8B",
              "position": 74
            },
            {
              "id": "1285544625037115557",
              "name": "MinaCon",
              "color": "#FAFFD6",
              "position": 25
            },
            {
              "id": "1205541869375979601",
              "name": "UMT",
              "color": "#FFFFFF",
              "position": 22
            },
            {
              "id": "1220064445863038996",
              "name": "zkApps",
              "color": "#FFFFFF",
              "position": 19
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
        }
      ]
    },
    {
      "id": "1173247088444842084",
      "type": "Default",
      "timestamp": "2023-11-12T17:05:03.762+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "none of that is necessary tbh, if you want to expose information about the proof you've used, you can expose the public input/output of the recursive proof, in a public output/input of the proof that accepts it as private input",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173247259987681290",
      "type": "Default",
      "timestamp": "2023-11-12T17:05:44.661+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "circuitA -> proofA -> circuitB -> proofB\n\nverifying the proofB, you can be sure that proofA was generated by circuitA, if you try using a proofC -> circuitB -> proofB wont be generated at all",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173299151824486500",
      "type": "Default",
      "timestamp": "2023-11-12T20:31:56.639+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thank you. Iâ€™m trying to avoid unnecessary data being passed in public outputs. Itâ€™s very important to understand whether the understanding that I have regarding the public inputs and private inputs is correct.",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173306300260700200",
      "type": "Default",
      "timestamp": "2023-11-12T21:00:20.959+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "For more detail, below is how I understand it. \n\nIn the context of zero-knowledge proofs, if a recursive proof is provided as a private input to a circuit, the verifier can confirm that a correct proof has been computed without learning any additional information about the input proof itself. The circuit's verification key is designed to ensure the integrity of the proof without revealing the proof's content. \n\nThe verification key corresponds to the particular circuit that generated the proof, meaning that while the verifier can be certain that the proof is valid for a specific circuit (since the verification key will only validate a proof generated by its corresponding circuit), **the actual content of the proof, including any recursive proofs used as inputs, remains hidden if it is a private input. The verification process does not reveal which specific input was used; it only confirms that the input satisfies the circuit's constraints.**\n\nTherefore, the verifier would know which circuit's verification key was used, which indirectly means knowing the circuit since each circuit has a unique verification key. However,** they would not know the specific recursive proof used as a private input unless the circuit logic explicitly exposes this information**. This maintains the zero-knowledge property where the verifier learns nothing other than the fact that the proof is valid according to the circuit's rules. The privacy of the recursive proof as a private input is preserved.\n\nI'd greatly appretiate any feedback about this. I've been reading through the Mina Book, the code examples, the docs and the tutorials, and this is the understanding that I have built.\n\nThank you.",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173320619358695475",
      "type": "Default",
      "timestamp": "2023-11-12T21:57:14.898+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I've been experimenting, and it doesn't appear for it to be possible to specify a recursive proof as public input. The following syntax does not compile:\n\n```\nexport const CoordinatesInPolygon = Experimental.ZkProgram({\n    publicOutput: CoordinateInPolygonCommitment,\n    publicInput: Proof<Empty, NoncedGeographicalPoint>, // ISSUE HERE\n\n    methods: {...}\n...\n}\n```\n\nI looked through the source code and the public input/output only accept Pure values, which leads me to believe that they can't be recursive proofs.",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173322942613037156",
      "type": "Default",
      "timestamp": "2023-11-12T22:06:28.805+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "you dont need proof as public input, private input is sufficient",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173323018446053516",
      "type": "Reply",
      "timestamp": "2023-11-12T22:06:46.885+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "^^",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [],
      "reference": {
        "messageId": "1173229353979629579",
        "channelId": "1173226616344825857",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1173338397478232084",
      "type": "Default",
      "timestamp": "2023-11-12T23:07:53.532+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thanks. Would the verifier party be able to identify which circuits were involved in the creation of a particular proof? Let's assume that we provide the source code of all the possible circuits that could be used as a private input. If so, how would they do it?",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173400321951809608",
      "type": "Reply",
      "timestamp": "2023-11-13T03:13:57.477+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Exactly correct! In particular, the public inputs of recursively verified proofs are private inputs to the verifier circuit. The final verifier doesn't learn them",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "1122802332166520932",
          "name": "illya.papi",
          "discriminator": "0000",
          "nickname": "illya",
          "color": "#C02020",
          "isBot": false,
          "roles": [
            {
              "id": "1090136219045867601",
              "name": "Gov Focus Group",
              "color": "#C02020",
              "position": 107
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "1150768164850913322",
              "name": "zkIgnite Cohort 2",
              "color": "#E97404",
              "position": 96
            },
            {
              "id": "1285544625037115557",
              "name": "MinaCon",
              "color": "#FAFFD6",
              "position": 25
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1173306300260700200",
        "channelId": "1173226616344825857",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1173400875503452242",
      "type": "Reply",
      "timestamp": "2023-11-13T03:16:09.454+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "We would usually give the verifying party the source code which generates the circuit and also the verification key. Otherwise they wouldn't know what circuit they are verifying.",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "1122802332166520932",
          "name": "illya.papi",
          "discriminator": "0000",
          "nickname": "illya",
          "color": "#C02020",
          "isBot": false,
          "roles": [
            {
              "id": "1090136219045867601",
              "name": "Gov Focus Group",
              "color": "#C02020",
              "position": 107
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "1150768164850913322",
              "name": "zkIgnite Cohort 2",
              "color": "#E97404",
              "position": 96
            },
            {
              "id": "1285544625037115557",
              "name": "MinaCon",
              "color": "#FAFFD6",
              "position": 25
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1173338397478232084",
        "channelId": "1173226616344825857",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1173401091879227442",
      "type": "Default",
      "timestamp": "2023-11-13T03:17:01.042+04:00",
      "timestampEdited": "2023-11-13T03:17:33.851+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "But the verification key is not strictly hiding the source code, just massively obscuring it by turning it into a bunch of small commitments",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173615261983719514",
      "type": "Default",
      "timestamp": "2023-11-13T17:28:03.174+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thank you @gregor,\n\nIf my understanding is correct, then the following are true:\n* Recursive proofs provided as private inputs maintain the confidentiality of their content while allowing the verifier to confirm the correctness of the computation.\n\n* The verifier can ascertain the use of a specific verification key and thus, by extension, which circuit was employed to generate a recursive proof. However, they remain unaware of the specific recursive proof used unless the circuit logic is designed to reveal this.\n\n* A recursive proof does not need to be provided as a public input for the verifier to perform their validation. The final verifier does not learn the public inputs of the recursively verified proofs, as they are treated as private inputs to the verifier circuit.\n\n* The verification key does not strictly hide the circuit's source code but rather significantly obscures it, ensuring the integrity of the proof without revealing the proof's content.\n\nA follow-up question: is the public output of the recursive proof passed as a private input visible to the verifier? Let's say that the circuit that accepts the self proof as an argument uses the public output of the SelfProof for computation.",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ]
    },
    {
      "id": "1173616701800202280",
      "type": "Default",
      "timestamp": "2023-11-13T17:33:46.453+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Consider the following ZKPrograms:\n\n```\nclass InnerProofPublicInput extends Struct({\n    a: Field,\n    b: Field,\n}) { }\n\nclass InnerProofPublicOutput extends Struct({\n    a: Field,\n    b: Field,\n}) { }\n\nexport const Inner = Experimental.ZkProgram({\n    publicInput: InnerProofPublicInput, \n    publicOutput: InnerProofPublicOutput,\n\n    methods: {\n        innerProofMethod: {\n            privateInputs: [],\n            method: (pubilcInput: InnerProofPublicInput) => {\n                return new InnerProofPublicOutput({a: Field(0), b: Field(1)});\n            },\n        },\n    }\n});\n\nexport const UnusedInner = Experimental.ZkProgram({\n    publicInput: InnerProofPublicInput, \n    publicOutput: InnerProofPublicOutput,\n\n    methods: {\n        innerProofMethod: {\n            privateInputs: [],\n            method: (pubilcInput: InnerProofPublicInput) => {\n                return new InnerProofPublicOutput({a: Field(10), b: Field(20)});\n            },\n        },\n    }\n});\n\nexport const Outer = Experimental.ZkProgram({\n    publicInput: Empty, \n    publicOutput: Bool,\n\n    methods: {\n        outerProofMethod: {\n            privateInputs: [SelfProof<InnerProofPublicInput, InnerProofPublicOutput>],\n            method: (innerProof: SelfProof<InnerProofPublicInput, InnerProofPublicOutput>) => {\n                innerProof.verify();\n                const result: Bool = Provable.if(innerProof.publicOutput.a.equals(Field(0)), Bool(true), Bool(false));\n                return result;\n            },\n        },\n    }\n});\n\nconst innerProof = await Inner.innerProofMethod(new InnerProofPublicInput({a: Field(100), b: Field(200)}));\nconst outerProof = await Outer.outerProofMethod(innerProof);\n```",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173616934512754698",
      "type": "Default",
      "timestamp": "2023-11-13T17:34:41.936+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Regarding this code, I have the following questions:\n\n* What will be visible to the entity in possession of `outerProof` regarding the `innerProof`? Let's assume we provide this full source code to the verifying entity.\n* Will the verifying entity be able to discern wether the `Inner` or the `UnusedInner` circuit was used as the recursive proof argument?  Let's assume we provide this full source code to the verifying entity.",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173620679212539956",
      "type": "Default",
      "timestamp": "2023-11-13T17:49:34.742+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "> Will the verifying entity be able to discern wether the Inner or the UnusedInner circuit was used as the recursive proof argument?  Let's assume we provide this full source code to the verifying entity.\nyes\n> What will be visible to the entity in possession of outerProof regarding the innerProof? Let's assume we provide this full source code to the verifying entity.\nthe verifying entity will be able to check that the source code of `Inner` was used in the inner proof. They will know that because the outer proof is not valid if the inner proof was created from different source code.\nother than that, the verifier learns nothing",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173632004412158026",
      "type": "Default",
      "timestamp": "2023-11-13T18:34:34.88+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@gregor thanks again. If both, the pubic and the private inputs of SelfProofs are invisible to the uppermost verifier, then would the following be a viable architectural pattern?\n\nIn this architectural pattern, the zkApp gets separated into two sets of circuits: \"private circuits\" and \"public circutis\". The \"private circuits\" are only meant to be used locally to build proofs, they should never leave the user's local environment, as they may contain sensitive metadata. The \"public circuits\" receive private circuits as SelfProof, and return their publicOuput after stripping off the sensitive metadata.\n\nLet me provide you with a concrete example of what that metadata may be. Let's consider a zkApp that provides a ZK-interface into SQL queries. When performing certain statements, you need perform checks to ensure that they are valid. For example, when making a JOIN, you need to ensure that you are not JOINing the same table. For that purpose, you could have Structs representing the hash of the name of the table, and a comparison between both can be done to ensure their equality. However, when returning the result of the query to a third party, you may not want to reveal all of the metadata, which could be some sensitive database table names, record counts, and any other metadata that is helpful for the main logic of your zkApp. The \"public circuits\" would receive the \"private circuit\" proofs, verify them, strip out any sensitive data out of their public output, and return that as their publicOutput. The \"private circuits\" make extensive use of extensibility via recursive proofs.\n\nAssuming that the full source code would be shared, as long as only the \"public circuit\" proofs are shared with third parties, does all metadata used in them remain private, while offering the same underlying ZK guarantees as the underlyng recursive \"private circuit proof\"?",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ]
    },
    {
      "id": "1173634049802248283",
      "type": "Default",
      "timestamp": "2023-11-13T18:42:42.539+04:00",
      "timestampEdited": "2023-11-13T18:43:08.149+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@illya I don't get the point of your example -- specifically, why you wouldn't just have the sensitive data as private inputs from the beginning. Apart from that, it feels like you're restating stuff that was said above",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "1122802332166520932",
          "name": "illya.papi",
          "discriminator": "0000",
          "nickname": "illya",
          "color": "#C02020",
          "isBot": false,
          "roles": [
            {
              "id": "1090136219045867601",
              "name": "Gov Focus Group",
              "color": "#C02020",
              "position": 107
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "1150768164850913322",
              "name": "zkIgnite Cohort 2",
              "color": "#E97404",
              "position": 96
            },
            {
              "id": "1285544625037115557",
              "name": "MinaCon",
              "color": "#FAFFD6",
              "position": 25
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
        }
      ]
    },
    {
      "id": "1173641678435930163",
      "type": "Default",
      "timestamp": "2023-11-13T19:13:01.347+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@gregor  the problem is not with the inputs, but with outputs. Consider an application that stores state in its public output (like Mina). Let's say that internally I limit the counter of operations for all method calls to 100. Internally, you're keeping a track of the number of method calls as an UInt64 in a custom Struct. All of your methods inrement the number of calls, ensure that it's not above 100, and put the updated value in the public output, alongisde the result. When sharing your proof with a third party, you may want to hide the number of operations that you have taken, but you would like them to know that it was below 100. For this, you create another circuit, that receives the SelfProof with call number counter, and returns another struct which is a copy of the publicOutput of the SelfProof, but without the call counter.",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ]
    },
    {
      "id": "1173643142097023056",
      "type": "Reply",
      "timestamp": "2023-11-13T19:18:50.311+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "ok that makes sense!!\n\nanother pattern that might be useful is to have a blinding commitment as the public output, instead of the real value.\nThis tutorial shows that pattern: https://docs.minaprotocol.com/zkapps/tutorials/private-inputs-hash-functions\nIt maintains a counter in public state whose actual value stays private (and must be provided each time as a private input by the entity that calls the contract)",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "1122802332166520932",
          "name": "illya.papi",
          "discriminator": "0000",
          "nickname": "illya",
          "color": "#C02020",
          "isBot": false,
          "roles": [
            {
              "id": "1090136219045867601",
              "name": "Gov Focus Group",
              "color": "#C02020",
              "position": 107
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "1150768164850913322",
              "name": "zkIgnite Cohort 2",
              "color": "#E97404",
              "position": 96
            },
            {
              "id": "1285544625037115557",
              "name": "MinaCon",
              "color": "#FAFFD6",
              "position": 25
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1173641678435930163",
        "channelId": "1173226616344825857",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1173643828373229568",
      "type": "Default",
      "timestamp": "2023-11-13T19:21:33.932+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Perfect, thank you! I'm refactoring the architecture of my application based on this discussion. I just want to say wow... this recursive nature is immensely powerful.",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1173731435723624458",
      "type": "Default",
      "timestamp": "2023-11-14T01:09:41.152+04:00",
      "timestampEdited": "2023-11-14T01:22:54.799+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I don't really know if it's affiliate to your problem, but I try to update tictactoe exemple to use recursive proof for each move\nhttps://github.com/youtpout/zkapp-ui/blob/6620ba09a321bc79af944ed469e67ffc91b73e3b/contracts/src/tictacproof.ts#L156",
      "author": {
        "id": "295757910691151873",
        "name": "youtpout",
        "discriminator": "0000",
        "nickname": "Youtpout",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/295757910691151873/3c7813b443eec196ba05378b57e0e0ff.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "zkapp-ui/contracts/src/tictacproof.ts at 6620ba09a321bc79af944ed469...",
          "url": "https://github.com/youtpout/zkapp-ui/blob/6620ba09a321bc79af944ed469e67ffc91b73e3b/contracts/src/tictacproof.ts",
          "timestamp": null,
          "description": "Contribute to youtpout/zkapp-ui development by creating an account on GitHub.",
          "color": "#1E2327",
          "thumbnail": {
            "url": "https://images-ext-1.discordapp.net/external/1bFFFW1xY-_sCOXixiULYHVo0exKeHy586kF1dZzZmU/https/opengraph.githubassets.com/a6aef2cb39f8cebf3ed691aa106ef669cb7d9788990f58b3256e1281aad12936/youtpout/zkapp-ui",
            "width": 1200,
            "height": 600
          },
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1181203867770294293",
      "type": "Default",
      "timestamp": "2023-12-04T16:02:27.783+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "As an update, I have written a blog post covering the implementation of recursive zkSNARKs in O1JS. It incudes code examples in O1JS and answers all of the questions from this thread.\n\nYou can find it here: \nhttps://illya.sh/blog/posts/zk-snarks-recursive-proof-private-intput-visibility/",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "Recursive zkSNARK Proof as a Private Input - What Is Visible To The...",
          "url": "https://illya.sh/blog/posts/zk-snarks-recursive-proof-private-intput-visibility/",
          "timestamp": null,
          "description": "In this blog post, we will explore the dynamic intersection of blockchain, privacy, and cryptography, focusing on the pivotal role of zero-knowledge proofs, especially zkSNARKs and their recursive variations. These innovative technologies are revolutionizing our approach to digital privacy and authenticity. Here, we delve into their practical ap...",
          "thumbnail": {
            "url": "https://images-ext-1.discordapp.net/external/fECO-u4ykgweYgq4btoKwXTwmFKAPU23yrrQWNY3ueQ/https/illya.sh/blog/posts/recursive-zksnark-proof-as-a-private-input---what-is-visible-to-the-verifier.png",
            "width": 1200,
            "height": 630
          },
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDD25",
            "code": "fire",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f525.svg"
          },
          "count": 2,
          "users": [
            {
              "id": "687695163988246532",
              "name": "mario_zito",
              "discriminator": "0000",
              "nickname": "Mario | Socialcap",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/687695163988246532/51383682fc5393f7ef35ec027d85c28a.png?size=512"
            },
            {
              "id": "715875608965414953",
              "name": "0xshashank",
              "discriminator": "0000",
              "nickname": "0xKriss1897",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/715875608965414953/5f904b744be39181b263e74dbe177f20.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1181291133771464724",
      "type": "Reply",
      "timestamp": "2023-12-04T21:49:13.619+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "This is beautiful Ilya, would absolutely love to share on twitter/X. What's your ID?",
      "author": {
        "id": "752915909538217995",
        "name": "lucidsamuel",
        "discriminator": "0000",
        "nickname": "LucidSamuel",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/752915909538217995/ae3323b7d38aa8031fe431bcb2fc775d.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "1122802332166520932",
          "name": "illya.papi",
          "discriminator": "0000",
          "nickname": "illya",
          "color": "#C02020",
          "isBot": false,
          "roles": [
            {
              "id": "1090136219045867601",
              "name": "Gov Focus Group",
              "color": "#C02020",
              "position": 107
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "1150768164850913322",
              "name": "zkIgnite Cohort 2",
              "color": "#E97404",
              "position": 96
            },
            {
              "id": "1285544625037115557",
              "name": "MinaCon",
              "color": "#FAFFD6",
              "position": 25
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1181203867770294293",
        "channelId": "1173226616344825857",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1181292496500838460",
      "type": "Default",
      "timestamp": "2023-12-04T21:54:38.519+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thank you very much @LucidSamuel.\n\nLet me know if you have any questions!\n\nHere it is: https://twitter.com/ILUXONCHIK",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "752915909538217995",
          "name": "lucidsamuel",
          "discriminator": "0000",
          "nickname": "LucidSamuel",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/avatars/752915909538217995/ae3323b7d38aa8031fe431bcb2fc775d.png?size=512"
        }
      ]
    },
    {
      "id": "1182441959575531550",
      "type": "Reply",
      "timestamp": "2023-12-08T02:02:11.872+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Excelent article ! Very well explained from top to bottom. Would suggest it as required reading for anyone starting with O1JS !",
      "author": {
        "id": "687695163988246532",
        "name": "mario_zito",
        "discriminator": "0000",
        "nickname": "Mario | Socialcap",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/687695163988246532/51383682fc5393f7ef35ec027d85c28a.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "1122802332166520932",
          "name": "illya.papi",
          "discriminator": "0000",
          "nickname": "illya",
          "color": "#C02020",
          "isBot": false,
          "roles": [
            {
              "id": "1090136219045867601",
              "name": "Gov Focus Group",
              "color": "#C02020",
              "position": 107
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "1150768164850913322",
              "name": "zkIgnite Cohort 2",
              "color": "#E97404",
              "position": 96
            },
            {
              "id": "1285544625037115557",
              "name": "MinaCon",
              "color": "#FAFFD6",
              "position": 25
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1181203867770294293",
        "channelId": "1173226616344825857",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1184344405549785099",
      "type": "Default",
      "timestamp": "2023-12-13T08:01:50.338+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thank you very much @Mario | Socialcap \uD83D\uDE4C\n\nI got more coming in the near future. Right now focused on the development \uD83D\uDE42",
      "author": {
        "id": "1122802332166520932",
        "name": "illya.papi",
        "discriminator": "0000",
        "nickname": "illya",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1122802332166520932/7d472e13c746407efa6a79bb6539ca59.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "523199492716101653",
              "name": "yunusgurlek",
              "discriminator": "0000",
              "nickname": "Yunus GÃ¼rlek",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/embed/avatars/0.png"
            }
          ]
        }
      ],
      "mentions": [
        {
          "id": "687695163988246532",
          "name": "mario_zito",
          "discriminator": "0000",
          "nickname": "Mario | Socialcap",
          "color": "#C02020",
          "isBot": false,
          "roles": [
            {
              "id": "1090136219045867601",
              "name": "Gov Focus Group",
              "color": "#C02020",
              "position": 107
            },
            {
              "id": "1158450061982847106",
              "name": "Cohort 2 Mentors",
              "color": "#E74C3C",
              "position": 101
            },
            {
              "id": "1121063832555634799",
              "name": "zkIgnite Cohort 1",
              "color": "#F38705",
              "position": 97
            },
            {
              "id": "1285544625037115557",
              "name": "MinaCon",
              "color": "#FAFFD6",
              "position": 25
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/687695163988246532/51383682fc5393f7ef35ec027d85c28a.png?size=512"
        }
      ]
    }
  ],
  "messageCount": 29
}