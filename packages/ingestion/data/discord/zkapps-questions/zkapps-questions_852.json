{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1101554390030102579",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "Unable to guard failed execution with conditional",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T16:02:52.3944094+04:00",
  "messages": [
    {
      "id": "1101554390030102579",
      "type": "Default",
      "timestamp": "2023-04-28T21:03:52.474+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "```javascript\n        Circuit.if(\n          UInt64.from(a).lessThan(UInt64.from(b)),\n          UInt64.from(b).sub(UInt64.from(a)),\n          UInt64.from(a).sub(UInt64.from(b))\n        )\n```\nThe compiler does not let this past even though the failed execution is guarded.",
      "author": {
        "id": "611505995998429194",
        "name": "arj_",
        "discriminator": "0000",
        "nickname": "arj",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/611505995998429194/c037900dbcde6b8d36d69c17df9697c0.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "301752126491721730",
              "name": "blockbeard",
              "discriminator": "0000",
              "nickname": "angus_m",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/301752126491721730/0a8d7f37a46cb3c2ca757f772e60e497.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1101566969892843581",
      "type": "Default",
      "timestamp": "2023-04-28T21:53:51.747+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Ok, fixed by pulling Field methods out of UInt64 then creating new UInt64 for return value",
      "author": {
        "id": "611505995998429194",
        "name": "arj_",
        "discriminator": "0000",
        "nickname": "arj",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/611505995998429194/c037900dbcde6b8d36d69c17df9697c0.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 2,
          "users": [
            {
              "id": "301752126491721730",
              "name": "blockbeard",
              "discriminator": "0000",
              "nickname": "angus_m",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/301752126491721730/0a8d7f37a46cb3c2ca757f772e60e497.png?size=512"
            },
            {
              "id": "568421780331692042",
              "name": "mitschabaude",
              "discriminator": "0000",
              "nickname": "gregor",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1102571289455120394",
      "type": "Default",
      "timestamp": "2023-05-01T16:24:40.19+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Awesome that you were able to make this work!\n\nJust a note on this:\n\n> The compiler does not let this past even though the failed execution is guarded.\n\nIt's important to get your mental model right about this. The JS you write as your circuit isn't compiled/transpiled. It's normal JS that is executed and creates the circuit by calling library functions like `Circuit.if`.\nSince `Circuit.if` is a normal JS function, it can't be short-circuiting like a native if statement. All arguments are evaluated before calling the function (that's how function calls work)",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1104188141478363246",
      "type": "Default",
      "timestamp": "2023-05-06T03:29:27.752+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "This may be a silly question, I guess it's not quite clear to me what the circuit *is*. Where does the proof system get involved and how does snarkjs talk to the proof system?",
      "author": {
        "id": "611505995998429194",
        "name": "arj_",
        "discriminator": "0000",
        "nickname": "arj",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/611505995998429194/c037900dbcde6b8d36d69c17df9697c0.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1104758826567213128",
      "type": "Default",
      "timestamp": "2023-05-07T17:17:09.68+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "snarkyjs essentially builds up an AST, turns it into R1CS, then puts that into Kimchi.\nIf you want to know what it \"actually\" looks like under the hood, look into PLONK and PLONKish arithmetisation systems.",
      "author": {
        "id": "140202196758167552",
        "name": "las0",
        "discriminator": "0000",
        "nickname": "Las",
        "color": "#E5DFBB",
        "isBot": false,
        "roles": [
          {
            "id": "1280898028529778789",
            "name": "Community Builder",
            "color": "#E5DFBB",
            "position": 26
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/140202196758167552/09906db085c1359960d2883ed15e8108.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1105125481864499220",
      "type": "Reply",
      "timestamp": "2023-05-08T17:34:07.115+04:00",
      "timestampEdited": "2023-05-08T17:34:45.807+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "well, it's not quite R1CS but yeah, as @Las said, think of the circuit as some internal structure that represents the computation you are doing, in a way that can be turned to a list of PLONK gates at the end.\n\nat a high level, here's what happens with a SmartContract `@method` or other provable function, when you do `prove()`:\n\n- SnarkyJS sets up a new, empty structure that we call \"circuit\". It then runs the `@method` that you wrote, like you run any JS function.\n- During running your function, every time you call certain library methods, like `Circuit.if()` or `Field.mul() `, they add something to that internal circuit\n- After running your function, SnarkyJS has this circuit structure which somehow represents the library functions you called together with the variables involved.\nSomewhere inside the OCaml part of snarky, it will turn that \"internal circuit representation\" into an instance of PLONK -- a list of gates and (if this is the prover running) witness columns. It then uses the proof system to create a zk proof for that PLONK instance.\n\nIf you're curious, this file is where the translation between \"snarky-internal circuit representation\" and \"plonk instance\" happens:  https://github.com/MinaProtocol/mina/blob/develop/src/lib/crypto/kimchi_backend/common/plonk_constraint_system.ml",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83E\uDD14",
            "code": "thinking",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f914.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "301752126491721730",
              "name": "blockbeard",
              "discriminator": "0000",
              "nickname": "angus_m",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/301752126491721730/0a8d7f37a46cb3c2ca757f772e60e497.png?size=512"
            }
          ]
        },
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 1,
          "users": []
        }
      ],
      "mentions": [
        {
          "id": "140202196758167552",
          "name": "las0",
          "discriminator": "0000",
          "nickname": "Las",
          "color": "#E5DFBB",
          "isBot": false,
          "roles": [
            {
              "id": "1280898028529778789",
              "name": "Community Builder",
              "color": "#E5DFBB",
              "position": 26
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/140202196758167552/09906db085c1359960d2883ed15e8108.png?size=512"
        },
        {
          "id": "611505995998429194",
          "name": "arj_",
          "discriminator": "0000",
          "nickname": "arj",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/avatars/611505995998429194/c037900dbcde6b8d36d69c17df9697c0.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1104188141478363246",
        "channelId": "1101554390030102579",
        "guildId": "484437221055922177"
      }
    }
  ],
  "messageCount": 6
}