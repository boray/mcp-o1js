{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1111489810989846569",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "Trying to learn more about a concept",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T15:50:20.6334778+04:00",
  "messages": [
    {
      "id": "1111489810989846569",
      "type": "Default",
      "timestamp": "2023-05-26T07:03:41.422+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I am building a ZKApp with pieces on a game board.  Both players have full information.\n\nTo represent the board, I am using a merkle tree of on/off leaves, and the basic version is an empty rectangle, with only units populating the board.  A more interesting idea is a game board with some terrain, maybe some impassable zones, or a wall which is too high to shoot over.\n\nThe logic for a valid move is simply that the target position is not already occupied, so if I modeled the impassable zones as occupied, they could not be moved to - but they could be moved _over_.  It does not seem practical to check that every point in the line segment of a single move is passable - that would blow up the circuit.  So here's the concept I want to learn more about:\n\nSince my game has full information, the server could issue a \"challenge\" that a move is illegal if it moves through impassable terrain.  It could prove that a specific illegal point is in the proposed move vector.  If the game was played peer to peer, the other player could issue the challenge.  But what if the game did not have full information, so the players need to explore the map and find each other?  If I claim I can see all around me for 10 units of distance, but there is actually a wall 9 units away, then the server could challenge my claim, and somehow I could work out where things are.  But if that were peer to peer, and neither peer knew where the wall was, then there's no one to challenge.  And if our units can see each other, you would choose not to challenge me, and let me believe that there is no unit there.\n\nSo I guess my question is whether there's a general way to handle a question like this?  Maybe the generalization is prove that an element is not in a set, without knowing the element?  In my case, a set of points makes a line segment and I want to prove that in the entire line segment there is no illegal point.  Alternatively, my sight line is some 2d shape and I want to prove there is no enemy there.",
      "author": {
        "id": "201337099700535297",
        "name": "45930",
        "discriminator": "0000",
        "nickname": "45930",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1266133384632078347",
            "name": "o1-exploration-team",
            "color": "#63CCF9",
            "position": 129
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1249795469157335081",
            "name": "NExT",
            "color": "#B47936",
            "position": 103
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "301752126491721730",
              "name": "blockbeard",
              "discriminator": "0000",
              "nickname": "angus_m",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/301752126491721730/0a8d7f37a46cb3c2ca757f772e60e497.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1111490485106786425",
      "type": "Default",
      "timestamp": "2023-05-26T07:06:22.144+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Sorry for the long one! \uD83D\uDE05  - it seems not possible.  Either you have to check every element of the set, which is not practical, or you're just trying to prove a negative in general.  But maybe I am approaching it wrong.\n\nIn any case, I made the game without fog of war because I knew this hard problem would bog me down, but it would be interesting to explore once the basic features are in place!",
      "author": {
        "id": "201337099700535297",
        "name": "45930",
        "discriminator": "0000",
        "nickname": "45930",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1266133384632078347",
            "name": "o1-exploration-team",
            "color": "#63CCF9",
            "position": 129
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1249795469157335081",
            "name": "NExT",
            "color": "#B47936",
            "position": 103
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1113418176760402060",
      "type": "Default",
      "timestamp": "2023-05-31T14:46:19.649+04:00",
      "timestampEdited": "2023-05-31T15:12:59.356+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I have a long-shot idea about the general problem of proving an element is not in a set efficiently. it works if the set is of size 2^n for some n, 0 <= n <= 32\n\naccording to finite field theory and the properties of our specific field, since every such 2^n divides p-1, there are 2^n roots of the polynomial `X^(2^n) - 1`. The idea works if you can represent your set as these 2^n roots somehow.\n\nThen, to prove that x is not in the set by checking that `x^(2^n) != 1`. that can be done efficiently by squaring the field element n times, i.e. in `O(log(#size of the set))` constraints",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDE32",
            "code": "astonished",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f632.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "201337099700535297",
              "name": "45930",
              "discriminator": "0000",
              "nickname": "45930",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1113429053123342337",
      "type": "Default",
      "timestamp": "2023-05-31T15:29:32.776+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Incidentally, is this the same problem that causes Field.greaterThan to be slow?",
      "author": {
        "id": "201337099700535297",
        "name": "45930",
        "discriminator": "0000",
        "nickname": "45930",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1266133384632078347",
            "name": "o1-exploration-team",
            "color": "#63CCF9",
            "position": 129
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1249795469157335081",
            "name": "NExT",
            "color": "#B47936",
            "position": 103
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1113430621495238666",
      "type": "Default",
      "timestamp": "2023-05-31T15:35:46.705+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I think in my case, if I limit shapes on the map to be based on straight lines, I actually have a better specific case of just comparing (x,y) pairs and confirming there is no intersection.  That avoids checking every pixel in the line segment separately.  The other question is how to avoid running that check on every move.  E.g. I have a star in the top left corner and a pentagon in the bottom left, but my move takes place in the upper right corner far from any potential intersection.  I’d still have to run  ~15 checks on the shapes in the left side to satisfy the proof.",
      "author": {
        "id": "201337099700535297",
        "name": "45930",
        "discriminator": "0000",
        "nickname": "45930",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1266133384632078347",
            "name": "o1-exploration-team",
            "color": "#63CCF9",
            "position": 129
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1249795469157335081",
            "name": "NExT",
            "color": "#B47936",
            "position": 103
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1113431050325065888",
      "type": "Default",
      "timestamp": "2023-05-31T15:37:28.946+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I assume finding intersections of circles and well defined arcs is also possible to express in a way that’s compatible with this idea.",
      "author": {
        "id": "201337099700535297",
        "name": "45930",
        "discriminator": "0000",
        "nickname": "45930",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1266133384632078347",
            "name": "o1-exploration-team",
            "color": "#63CCF9",
            "position": 129
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1249795469157335081",
            "name": "NExT",
            "color": "#B47936",
            "position": 103
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1113432158523105392",
      "type": "Default",
      "timestamp": "2023-05-31T15:41:53.161+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "If I understand your idea correctly, you can map totally unrelated elements of a set to values that are structured better to answer the question.  But that approach is probably worse than finding a natural pattern which already exist.  If I can treat 100 pixels in a straight line as a line segment and exclude all 100 pixels of a different line segment from the set of the first one, then that compresses the question a lot more than treating the points as unrelated elements.",
      "author": {
        "id": "201337099700535297",
        "name": "45930",
        "discriminator": "0000",
        "nickname": "45930",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1266133384632078347",
            "name": "o1-exploration-team",
            "color": "#63CCF9",
            "position": 129
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1249795469157335081",
            "name": "NExT",
            "color": "#B47936",
            "position": 103
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1113444622920863894",
      "type": "Reply",
      "timestamp": "2023-05-31T16:31:24.905+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "yeah that sounds right!",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "201337099700535297",
          "name": "45930",
          "discriminator": "0000",
          "nickname": "45930",
          "color": "#206694",
          "isBot": false,
          "roles": [
            {
              "id": "595716565014675466",
              "name": "o1 Labs",
              "color": "#206694",
              "position": 131
            },
            {
              "id": "1266133384632078347",
              "name": "o1-exploration-team",
              "color": "#63CCF9",
              "position": 129
            },
            {
              "id": "1090136219045867601",
              "name": "Gov Focus Group",
              "color": "#C02020",
              "position": 107
            },
            {
              "id": "1043261559478165567",
              "name": "ZK-peer-reviewer",
              "color": "#F87607",
              "position": 104
            },
            {
              "id": "1249795469157335081",
              "name": "NExT",
              "color": "#B47936",
              "position": 103
            },
            {
              "id": "1044272767060672624",
              "name": "Cohort 0 Mentor",
              "color": "#A84300",
              "position": 102
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "1010215418604040232",
              "name": "zkapp-beta-tester",
              "color": "#E06304",
              "position": 99
            },
            {
              "id": "931675496079585350",
              "name": "zkApp Builders Program - Cohort 1",
              "color": "#F37210",
              "position": 98
            },
            {
              "id": "1121063832555634799",
              "name": "zkIgnite Cohort 1",
              "color": "#F38705",
              "position": 97
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            },
            {
              "id": "754653466344947782",
              "name": "QA Task Force",
              "color": "#B2F3B8",
              "position": 80
            },
            {
              "id": "893400661759246366",
              "name": "Applicant",
              "color": null,
              "position": 24
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1113432158523105392",
        "channelId": "1111489810989846569",
        "guildId": "484437221055922177"
      }
    }
  ],
  "messageCount": 8
}