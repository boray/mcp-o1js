{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1328681155741880435",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "Decrypt message inside smart contract with its account private key",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-23T15:13:25.8352091+04:00",
  "messages": [
    {
      "id": "1328681155741880435",
      "type": "Default",
      "timestamp": "2025-01-14T15:04:33.231+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Do we have a functionality towards the encryption of a message from sender with using a public key encryption from client by encrypting the message with the smart contract public key. Then decrypt inside the smart contract that is using smart contract account private key.  A decrypt method that uses smart contracts private key.\nIf not is it doable? \nI thought using homomorphic encryption also but I would like to explore more optimized strategies on this topic",
      "author": {
        "id": "320869724688875520",
        "name": "containability",
        "discriminator": "0000",
        "nickname": "Containability",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/320869724688875520/300b7f53823810aa0a87e7f3365ed907.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1328683017413333043",
      "type": "Default",
      "timestamp": "2025-01-14T15:11:57.088+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "The main part is that I know we can use Encryption.decrypt but that requires a private key input from sender, I would like to have a native solution that is using the zkApp private key for that input instead. That would increase the overall UX because we can have more automated processes that does not require user intervention at every step",
      "author": {
        "id": "320869724688875520",
        "name": "containability",
        "discriminator": "0000",
        "nickname": "Containability",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/320869724688875520/300b7f53823810aa0a87e7f3365ed907.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1329186954834870344",
      "type": "Default",
      "timestamp": "2025-01-16T00:34:25.132+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Do you mean something like putting the private key of the zkApp inside the zkApp so it is able to decrypt messages when certain conditions are met?\n\nI think there's no native solution and you indeed would need homomorphic encryption for something like that.",
      "author": {
        "id": "1050599472071180389",
        "name": "chrlyz",
        "discriminator": "0000",
        "nickname": "chrlyz",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1050599472071180389/4a840b88bc5da50d607bf7cf7749d9ef.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1330416808036925511",
      "type": "Default",
      "timestamp": "2025-01-19T10:01:24.985+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "why do you want to decrypt something INSIDE the smart contract? it does not seems to be a secure practice being possible or not.\n\nWhat exactly can be achieved with that?",
      "author": {
        "id": "372048889135628300",
        "name": "anarkrypto",
        "discriminator": "0000",
        "nickname": "Kaique Anarkrypto",
        "color": "#E5DFBB",
        "isBot": false,
        "roles": [
          {
            "id": "1280898028529778789",
            "name": "Community Builder",
            "color": "#E5DFBB",
            "position": 26
          },
          {
            "id": "740299734341910689",
            "name": "Server Booster",
            "color": null,
            "position": 15
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/372048889135628300/35bb2c740298d83d4a6fe1e0a5ea073f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1331001540315709522",
      "type": "Default",
      "timestamp": "2025-01-21T00:44:56.024+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "You wouldn't have access to the zkapp private key within the contract, but maybe if you tell us more about why you want to do this we could help you come up with another approach! If this is a matter of needing to commit to a secret value on chain, you could use the hashing pattern demonstrated here: https://github.com/o1-labs-XT/mastermind-zkApp/tree/level1?tab=readme-ov-file#solutionhash",
      "author": {
        "id": "1292887486267133973",
        "name": "hattyhattington17",
        "discriminator": "0000",
        "nickname": "HattyHattington17",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1249795469157335081",
            "name": "NExT",
            "color": "#B47936",
            "position": 103
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1292887486267133973/d684efd4acb9c29d02df9e1ef1979bf4.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "GitHub - o1-labs-XT/mastermind-zkApp",
          "url": "https://github.com/o1-labs-XT/mastermind-zkApp/tree/level1?tab=readme-ov-file",
          "timestamp": null,
          "description": "Contribute to o1-labs-XT/mastermind-zkApp development by creating an account on GitHub.",
          "color": "#1E2327",
          "thumbnail": {
            "url": "https://images-ext-1.discordapp.net/external/2YazUV_JZR0gXmtKkGjdmezhxOGodKp3UBeLi_HmOLU/https/opengraph.githubassets.com/360fbb36f5c1c3e6eab502d670437647ae467b2de75ea1134d856b3417bc6158/o1-labs-XT/mastermind-zkApp",
            "width": 1200,
            "height": 600
          },
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "❤️",
            "code": "heart",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/2764.svg"
          },
          "count": 2,
          "users": [
            {
              "id": "201337099700535297",
              "name": "45930",
              "discriminator": "0000",
              "nickname": "45930",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
            },
            {
              "id": "320869724688875520",
              "name": "containability",
              "discriminator": "0000",
              "nickname": "Containability",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/320869724688875520/300b7f53823810aa0a87e7f3365ed907.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1335692375116349501",
      "type": "Default",
      "timestamp": "2025-02-02T23:24:38.192+04:00",
      "timestampEdited": "2025-02-02T23:29:46.54+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Hi guys, sorry for the late response. My goal is to actually have some private inputs to compare to decide upon a score.\nWe have correct answers and user answers. It looks like mastermind but different.\nWe need to compute the score of the user.\nWe need to preserve privacy of correct answers from our backend server so I cannot store decrypted correct answers on the database\nWe need to preserve privacy of the answers of the user from our backend server I cannot store decrypted answers of users\nBackend server needs to compute the score\nCorrect answers provided by the quiz creator at the creation of the smart contract\nAnswers will be provided by the user via a method",
      "author": {
        "id": "320869724688875520",
        "name": "containability",
        "discriminator": "0000",
        "nickname": "Containability",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/320869724688875520/300b7f53823810aa0a87e7f3365ed907.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1335692963313090611",
      "type": "Default",
      "timestamp": "2025-02-02T23:26:58.429+04:00",
      "timestampEdited": "2025-02-02T23:27:29.628+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I can make user provide its answers from a method and not actually compute the score from backend server. But still we need correct answers to compute the score and I should not give those correct answers to user device in such a public way. It should be encrypted until the smart contract method runs \uD83D\uDE42",
      "author": {
        "id": "320869724688875520",
        "name": "containability",
        "discriminator": "0000",
        "nickname": "Containability",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/320869724688875520/300b7f53823810aa0a87e7f3365ed907.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1335694062933508128",
      "type": "Default",
      "timestamp": "2025-02-02T23:31:20.599+04:00",
      "timestampEdited": "2025-02-02T23:31:40.911+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I found a solution for this but that requires KMS or something similar solution that is also gives access to decrypted values for the KMS owner. The better way is to use the private key that I cannot actually access but use it to decrypt or encrypt only inside smart contract",
      "author": {
        "id": "320869724688875520",
        "name": "containability",
        "discriminator": "0000",
        "nickname": "Containability",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/320869724688875520/300b7f53823810aa0a87e7f3365ed907.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1335701274250973315",
      "type": "Default",
      "timestamp": "2025-02-02T23:59:59.911+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Anyway actually homomorphic is the one I need not anything else here \uD83D\uDE04",
      "author": {
        "id": "320869724688875520",
        "name": "containability",
        "discriminator": "0000",
        "nickname": "Containability",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/320869724688875520/300b7f53823810aa0a87e7f3365ed907.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    }
  ],
  "messageCount": 9
}