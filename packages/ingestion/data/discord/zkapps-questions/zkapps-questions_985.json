{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1068429054098808893",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "Why do you need to check that a state variable equals itself?",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T17:19:23.0629083+04:00",
  "messages": [
    {
      "id": "1068429054098808893",
      "type": "Default",
      "timestamp": "2023-01-27T11:15:36.949+04:00",
      "timestampEdited": "2023-01-27T11:23:49.822+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "In the snarkyJS tutorials, I often see the following:\n\n```\nconst x = this.x.get();\nthis.x.assertEquals(x);\n```\n(Example: https://docs.minaprotocol.com/zkapps/tutorials/hello-world#smart-contract-class)\n\nWhat is the reason this check needs to be added? Thanks.",
      "author": {
        "id": "238103267501015051",
        "name": "legitmaxwu",
        "discriminator": "0000",
        "nickname": "max",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/238103267501015051/d703f2e931c1e3407610364d68434a57.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "Tutorial 1: Hello World | Mina Documentation",
          "url": "https://docs.minaprotocol.com/zkapps/tutorials/hello-world",
          "timestamp": null,
          "description": "Please note that zkApp programmability is not yet available on Mina Mainnet, but",
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 3,
          "users": [
            {
              "id": "301752126491721730",
              "name": "blockbeard",
              "discriminator": "0000",
              "nickname": "angus_m",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/301752126491721730/0a8d7f37a46cb3c2ca757f772e60e497.png?size=512"
            },
            {
              "id": "460896124602023937",
              "name": "isaac_quantifier",
              "discriminator": "0000",
              "nickname": "Isaac (Quantifier)",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/460896124602023937/b7f8488ea3b58d5c8e7c8adfc1a7f23b.png?size=512"
            },
            {
              "id": "1050599472071180389",
              "name": "chrlyz",
              "discriminator": "0000",
              "nickname": "chrlyz",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/1050599472071180389/4a840b88bc5da50d607bf7cf7749d9ef.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1068471938088960011",
      "type": "Default",
      "timestamp": "2023-01-27T14:06:01.289+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "So basically in a transaction lifecycle you have 2 events: The time that the transaction proof gets calculated and the time that proof (transaction) is included into the blockchain. \nFor proof generation you fetch the current state of the on-chain variables with which you then create your results and therefore the proof. But at the time the transaction gets included into a block, the on-chain state could have changed, and so to prevent a transaction overwriting a previous one, you need to connect the on-chain state at the point of inclusion to the state at the time of proof generation.\nAdditionally, you don´t have guarantees on whether the state you fetched when proving is indeed correct - a RPC provider could just give you wrong values. That is also a reason that you have to link to the on-chain state.",
      "author": {
        "id": "138034851872899081",
        "name": "rpanic",
        "discriminator": "0000",
        "nickname": "rpanic",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1093206126817968280",
            "name": "TW2-Operator",
            "color": "#72BE86",
            "position": 28
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1227899957491535973",
            "name": "Delegation-Program",
            "color": "#FFFFFF",
            "position": 21
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1297496671890047037",
            "name": "Protokit",
            "color": "#FFFFFF",
            "position": 16
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/138034851872899081/a3ac1d3e9ff9778efba8901ccb03783a.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 5,
          "users": [
            {
              "id": "238103267501015051",
              "name": "legitmaxwu",
              "discriminator": "0000",
              "nickname": "max",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/238103267501015051/d703f2e931c1e3407610364d68434a57.png?size=512"
            },
            {
              "id": "301752126491721730",
              "name": "blockbeard",
              "discriminator": "0000",
              "nickname": "angus_m",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/301752126491721730/0a8d7f37a46cb3c2ca757f772e60e497.png?size=512"
            },
            {
              "id": "439913321072820234",
              "name": "stovenlabs",
              "discriminator": "0000",
              "nickname": "StovenLabs ⦿ Founder @ Kintsu",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/439913321072820234/3668f35cbd6fbbc3fb549b686cbdc34b.png?size=512"
            },
            {
              "id": "460896124602023937",
              "name": "isaac_quantifier",
              "discriminator": "0000",
              "nickname": "Isaac (Quantifier)",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/460896124602023937/b7f8488ea3b58d5c8e7c8adfc1a7f23b.png?size=512"
            },
            {
              "id": "1050599472071180389",
              "name": "chrlyz",
              "discriminator": "0000",
              "nickname": "chrlyz",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/1050599472071180389/4a840b88bc5da50d607bf7cf7749d9ef.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1068471985073561660",
      "type": "Default",
      "timestamp": "2023-01-27T14:06:12.491+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I hope this explanation makes sense",
      "author": {
        "id": "138034851872899081",
        "name": "rpanic",
        "discriminator": "0000",
        "nickname": "rpanic",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1093206126817968280",
            "name": "TW2-Operator",
            "color": "#72BE86",
            "position": 28
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1227899957491535973",
            "name": "Delegation-Program",
            "color": "#FFFFFF",
            "position": 21
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1297496671890047037",
            "name": "Protokit",
            "color": "#FFFFFF",
            "position": 16
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/138034851872899081/a3ac1d3e9ff9778efba8901ccb03783a.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1068602277004333136",
      "type": "Default",
      "timestamp": "2023-01-27T22:43:56.508+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thank you for the explanation! It clears a lot of things up for me. As a follow up question, for `@method` smart contract functions, does this mean state variables are always \"public\" inputs and function arguments are always \"private inputs\"?\n\nNow my understanding is, generating the proof locally looks like `Prove(public state, private input parameters, constraints)`  and verifiers run `Verify(public state, constraints)` \n\nBut the `public state` accessed by the prover might not be equal to the one accessed by the verifier.\n\nIs this correct?\n\nAs a side note, it seems a little strange to me that running `const x = this.x.get()` doesn't automatically lead to the constraint being added. I'm sure there's a good reason for this, but almost feels like I'm weaving two implementations together into one smart contract function: 1 to transform data and update state, and 1 to define the constraints.",
      "author": {
        "id": "238103267501015051",
        "name": "legitmaxwu",
        "discriminator": "0000",
        "nickname": "max",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/238103267501015051/d703f2e931c1e3407610364d68434a57.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDCAF",
            "code": "100",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f4af.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "460896124602023937",
              "name": "isaac_quantifier",
              "discriminator": "0000",
              "nickname": "Isaac (Quantifier)",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/460896124602023937/b7f8488ea3b58d5c8e7c8adfc1a7f23b.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1069896607027433472",
      "type": "Default",
      "timestamp": "2023-01-31T12:27:08.833+04:00",
      "timestampEdited": "2023-01-31T12:27:42.258+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "> Is this correct?\nyes!\n\n> As a side note, it seems a little strange to me that running const x = this.x.get() doesn't automatically lead to the constraint being added. I'm sure there's a good reason for this\nthe idea is to make it explicit that there is a precondition added (which can be a bad thing, and some contracts might need to avoid it). also to give you the flexibility to declare assertions different than `assertEquals`. for example, some fields have `assertBetween`. also there is `assertNothing` if you know what you're doing \uD83D\uDE04\n\nthere's also the flexibility of asserting without using `.get()`. Like, to assert that the state equals 5, you don't need to get the state, you can just do `this.x.assertEquals(Field(5))` \n\nmake sure to check out the new new account update docs which might clarify what exactly the public input is for these proofs: https://docs.minaprotocol.com/zkapps/how-to-write-a-zkapp#transactions-and-account-updates",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "How to Write a zkApp | Mina Documentation",
          "url": "https://docs.minaprotocol.com/zkapps/how-to-write-a-zkapp",
          "timestamp": null,
          "description": "Please note that zkApp programmability is not yet available on Mina Mainnet, but",
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 2,
          "users": [
            {
              "id": "460896124602023937",
              "name": "isaac_quantifier",
              "discriminator": "0000",
              "nickname": "Isaac (Quantifier)",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/460896124602023937/b7f8488ea3b58d5c8e7c8adfc1a7f23b.png?size=512"
            },
            {
              "id": "1050599472071180389",
              "name": "chrlyz",
              "discriminator": "0000",
              "nickname": "chrlyz",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/1050599472071180389/4a840b88bc5da50d607bf7cf7749d9ef.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1069896835143053312",
      "type": "Default",
      "timestamp": "2023-01-31T12:28:03.22+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@max ^",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "238103267501015051",
          "name": "legitmaxwu",
          "discriminator": "0000",
          "nickname": "max",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/avatars/238103267501015051/d703f2e931c1e3407610364d68434a57.png?size=512"
        }
      ]
    },
    {
      "id": "1070036726975828058",
      "type": "Default",
      "timestamp": "2023-01-31T21:43:56.032+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@gregor thanks so much! your explanation makes a lot of sense, I did not think of the `assertBetween` use case \uD83E\uDD72",
      "author": {
        "id": "238103267501015051",
        "name": "legitmaxwu",
        "discriminator": "0000",
        "nickname": "max",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/238103267501015051/d703f2e931c1e3407610364d68434a57.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ]
    }
  ],
  "messageCount": 7
}