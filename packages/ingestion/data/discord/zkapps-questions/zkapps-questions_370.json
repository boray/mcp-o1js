{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1211885909834989638",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "How to understand the ActionState?",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T11:24:56.3157878+04:00",
  "messages": [
    {
      "id": "1211885909834989638",
      "type": "Default",
      "timestamp": "2024-02-27T08:01:56.656+04:00",
      "timestampEdited": "2024-02-27T08:04:15.966+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I don't quite understand the ActionState, who can help me clarify the following questions?\n\n1. Can ActionStates be used as the IDs of Actions for querying Action data?\n\n2. If a smart contract publishes an Action, can it immediately obtain the corresponding ActionState?\n\n3. Is it possible to obtain all ActionStates  of a smart contract from a blockchain explorer?\n\n4. If a smart contract only publishes an Action without changing its state, will the ActionState be recorded on the blockchain?\n\n5. Can the address of a smart contract that publishes an Action and a specific ActionState be used for proof, such as being used as private parameters in another smart contract to prove that the Action data meets certain requirements?\n\nThanks!",
      "author": {
        "id": "1186890131421012069",
        "name": "tenacious_mango_64264",
        "discriminator": "0000",
        "nickname": "ss",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1186890131421012069/fb7a8bda39452f3f559e2e731db569b9.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1211897074572984410",
      "type": "Default",
      "timestamp": "2024-02-27T08:46:18.537+04:00",
      "timestampEdited": "2024-02-28T09:03:45.039+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "1. Yes, the actionStates can be used as inputs to `getActions` .\n\n2. The final action state is not available until `reduce` is called, and `getActions` will not succeed if given the return value of `reduce` until after the zkapp transaction is included in a block.\n\n3. Yes, and as time passes hopefully more explorers will be available. See https://docs.minaprotocol.com/zkapps/o1js/fetch-events-and-actions#fetching-events-from-an-archive-node\n\n4. No. I assume by this you mean call `dispatch` without calling `reduce`.\n\n5. I think you'd need something more than this, but the idea of \"publishing\" an action isn't so clear. Proving transaction inclusion in an arbitrary point in the past is very challenging (mina does not yet provide this primitive), but if you had that, additionally proving something about the actions should be feasible.",
      "author": {
        "id": "192258292544700426",
        "name": "3221229683",
        "discriminator": "0000",
        "nickname": "ember",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/192258292544700426/avatars/51c1b2617db4f40414b845f4749d10a9.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1212256975446876252",
      "type": "Default",
      "timestamp": "2024-02-28T08:36:25.592+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thanks, Ember!\n\nI had read the *actions-and-reducer* document again and it says \"you can process previous actions in a smart contract! Under the hood, this is possible because a commitment is stored to the history of dispatched actions on every account -- the actionState\".\n\nCan the actionState value in a account be used as the *formActionState* or *endActionState* parameter of the Reducer.getActoins() to get a subset of Action data? \nBut it doesn't seem to be possible, as you said that an actionState is the intermediate state of the reduction.\n\nFurthermore, I do want to prove transaction inclusion, similar to recording data hashes on the Bitcoin blockchain. However, I also want this data (or its hash) to be involved zero-knowledge proofs in later.\n\nDoes Mina support using historical account data (such as a certain Field value) instead of current account data in zero-knowledge proofs? Additionally, can archive nodes retrieve account historical data based on block height or transaction ID?",
      "author": {
        "id": "1186890131421012069",
        "name": "tenacious_mango_64264",
        "discriminator": "0000",
        "nickname": "ss",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1186890131421012069/fb7a8bda39452f3f559e2e731db569b9.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1212260341443072010",
      "type": "Default",
      "timestamp": "2024-02-28T08:49:48.108+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Apologies for the confusion @ss , but I misunderstood actionState yesterday. It _is_ in fact the current root of a hash list, representing which actions contributed to the computation of `state`.",
      "author": {
        "id": "192258292544700426",
        "name": "3221229683",
        "discriminator": "0000",
        "nickname": "ember",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/192258292544700426/avatars/51c1b2617db4f40414b845f4749d10a9.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "1186890131421012069",
          "name": "tenacious_mango_64264",
          "discriminator": "0000",
          "nickname": "ss",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/avatars/1186890131421012069/fb7a8bda39452f3f559e2e731db569b9.png?size=512"
        }
      ]
    },
    {
      "id": "1212260615024939018",
      "type": "Default",
      "timestamp": "2024-02-28T08:50:53.335+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Let me go back and edit my answers :)",
      "author": {
        "id": "192258292544700426",
        "name": "3221229683",
        "discriminator": "0000",
        "nickname": "ember",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/192258292544700426/avatars/51c1b2617db4f40414b845f4749d10a9.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1212264953478778880",
      "type": "Default",
      "timestamp": "2024-02-28T09:08:07.703+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "To answer your follow up question: Yes! that is the ideal use for actionState.",
      "author": {
        "id": "192258292544700426",
        "name": "3221229683",
        "discriminator": "0000",
        "nickname": "ember",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/192258292544700426/avatars/51c1b2617db4f40414b845f4749d10a9.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1212267390814134302",
      "type": "Default",
      "timestamp": "2024-02-28T09:17:48.809+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I don't know off the top of my head a good way to prove that a previous action + actionState can be fast forwarded to the lastest values stored in the chain- maybe a separate recursive ZkProgram could produce that proof on-demand using `getActions`?",
      "author": {
        "id": "192258292544700426",
        "name": "3221229683",
        "discriminator": "0000",
        "nickname": "ember",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/192258292544700426/avatars/51c1b2617db4f40414b845f4749d10a9.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1212270538689482753",
      "type": "Default",
      "timestamp": "2024-02-28T09:30:19.321+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@ember we built Protokit to make recursive processing of actions as easy as writing a ‘solidity contract’, check out our docs preview to learn more: https://deploy-preview-1--aesthetic-beijinho-ea3a52.netlify.app",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "Protokit",
          "url": "https://deploy-preview-1--aesthetic-beijinho-ea3a52.netlify.app/",
          "timestamp": null,
          "description": "Protokit enables developers to build zero-knowledge, interoperable and privacy preserving application chains with a minimal learning curve.",
          "color": "#000111",
          "thumbnail": {
            "url": "https://images-ext-1.discordapp.net/external/9jwkqbFY9FnRAXcZYOvE4HH1VrMeG4l0ReAEF5jmxhg/https/protokit.dev/og.png",
            "width": 4800,
            "height": 2520
          },
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "192258292544700426",
          "name": "3221229683",
          "discriminator": "0000",
          "nickname": "ember",
          "color": "#FFFFFF",
          "isBot": false,
          "roles": [
            {
              "id": "1220065449098743838",
              "name": "Node-Operations",
              "color": "#FFFFFF",
              "position": 20
            },
            {
              "id": "1220064445863038996",
              "name": "zkApps",
              "color": "#FFFFFF",
              "position": 19
            },
            {
              "id": "1220065628602503188",
              "name": "Testing",
              "color": "#FFFFFF",
              "position": 18
            },
            {
              "id": "1291345674213920768",
              "name": "Rust-Node",
              "color": "#FFF7F7",
              "position": 17
            },
            {
              "id": "1259816280605851648",
              "name": "Links and Images",
              "color": "#FFFFFE",
              "position": 12
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/192258292544700426/avatars/51c1b2617db4f40414b845f4749d10a9.png?size=512"
        }
      ]
    },
    {
      "id": "1212272093119381604",
      "type": "Reply",
      "timestamp": "2024-02-28T09:36:29.926+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "https://deploy-preview-1--aesthetic-beijinho-ea3a52.netlify.app/docs/advanced/state-proofs\n\nlooks very easy to use! nice.",
      "author": {
        "id": "192258292544700426",
        "name": "3221229683",
        "discriminator": "0000",
        "nickname": "ember",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/192258292544700426/avatars/51c1b2617db4f40414b845f4749d10a9.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "Protokit",
          "url": "https://deploy-preview-1--aesthetic-beijinho-ea3a52.netlify.app/docs/advanced/state-proofs",
          "timestamp": null,
          "description": "Protokit enables developers to build zero-knowledge, interoperable and privacy preserving application chains with a minimal learning curve.",
          "color": "#000111",
          "thumbnail": {
            "url": "https://images-ext-1.discordapp.net/external/9jwkqbFY9FnRAXcZYOvE4HH1VrMeG4l0ReAEF5jmxhg/https/protokit.dev/og.png",
            "width": 4800,
            "height": 2520
          },
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "374663548174991362",
          "name": "maht0rz",
          "discriminator": "0000",
          "nickname": "maht0rz",
          "color": "#8B50FF",
          "isBot": false,
          "roles": [
            {
              "id": "846838836649525259",
              "name": "Mina Foundation",
              "color": "#8B50FF",
              "position": 138
            },
            {
              "id": "1146001284516827148",
              "name": "MF Engineering",
              "color": "#9B59B6",
              "position": 135
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "1090136219045867601",
              "name": "Gov Focus Group",
              "color": "#C02020",
              "position": 107
            },
            {
              "id": "1043261559478165567",
              "name": "ZK-peer-reviewer",
              "color": "#F87607",
              "position": 104
            },
            {
              "id": "1044272767060672624",
              "name": "Cohort 0 Mentor",
              "color": "#A84300",
              "position": 102
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "1121063832555634799",
              "name": "zkIgnite Cohort 1",
              "color": "#F38705",
              "position": 97
            },
            {
              "id": "754653466344947782",
              "name": "QA Task Force",
              "color": "#B2F3B8",
              "position": 80
            },
            {
              "id": "1083404176391929916",
              "name": "Mina Community Creator",
              "color": "#F68B8B",
              "position": 74
            },
            {
              "id": "1285544625037115557",
              "name": "MinaCon",
              "color": "#FAFFD6",
              "position": 25
            },
            {
              "id": "1205541869375979601",
              "name": "UMT",
              "color": "#FFFFFF",
              "position": 22
            },
            {
              "id": "1220064445863038996",
              "name": "zkApps",
              "color": "#FFFFFF",
              "position": 19
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1212270538689482753",
        "channelId": "1211885909834989638",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1212272974200176720",
      "type": "Reply",
      "timestamp": "2024-02-28T09:39:59.992+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "would love to know what you think about the ergonomics of the state/runtime API, overall architecture and also our settlement contract design:\n\nhttps://github.com/proto-kit/framework/blob/8d40b3e9b5bfe8712d9449a14fb6474754c5db12/packages/protocol/src/settlement/SettlementContract.ts#L124",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "framework/packages/protocol/src/settlement/SettlementContract.ts at...",
          "url": "https://github.com/proto-kit/framework/blob/8d40b3e9b5bfe8712d9449a14fb6474754c5db12/packages/protocol/src/settlement/SettlementContract.ts",
          "timestamp": null,
          "description": "Contribute to proto-kit/framework development by creating an account on GitHub.",
          "color": "#1E2327",
          "thumbnail": {
            "url": "https://images-ext-1.discordapp.net/external/emTQmP27PNyrJpaG3fKH5q3ewJJC8tfyoLVYF665XgA/https/opengraph.githubassets.com/04527ae224930c6fbfdc5671b540d4d14a0bbed4d94fb7fc83700c822d3f0ca4/proto-kit/framework",
            "width": 1200,
            "height": 600
          },
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "192258292544700426",
          "name": "3221229683",
          "discriminator": "0000",
          "nickname": "ember",
          "color": "#FFFFFF",
          "isBot": false,
          "roles": [
            {
              "id": "1220065449098743838",
              "name": "Node-Operations",
              "color": "#FFFFFF",
              "position": 20
            },
            {
              "id": "1220064445863038996",
              "name": "zkApps",
              "color": "#FFFFFF",
              "position": 19
            },
            {
              "id": "1220065628602503188",
              "name": "Testing",
              "color": "#FFFFFF",
              "position": 18
            },
            {
              "id": "1291345674213920768",
              "name": "Rust-Node",
              "color": "#FFF7F7",
              "position": 17
            },
            {
              "id": "1259816280605851648",
              "name": "Links and Images",
              "color": "#FFFFFE",
              "position": 12
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/192258292544700426/avatars/51c1b2617db4f40414b845f4749d10a9.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1212272093119381604",
        "channelId": "1211885909834989638",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1212273463767605258",
      "type": "Default",
      "timestamp": "2024-02-28T09:41:56.714+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "we support private mempools, ‘messaging model’ - where we utilize action state for deposits/withdrawals or other actions. This means you can use action state as a mempool, making a protokit appchain ‘l1 mempool based’. we support proving/inclusion of failed transaction execution - thanks to our runtime architecture",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1212273647553875998",
      "type": "Default",
      "timestamp": "2024-02-28T09:42:40.532+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "whoa, so protokit appchains can call each other thru mina L1?",
      "author": {
        "id": "192258292544700426",
        "name": "3221229683",
        "discriminator": "0000",
        "nickname": "ember",
        "color": "#FFFFFF",
        "isBot": false,
        "roles": [
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/192258292544700426/avatars/51c1b2617db4f40414b845f4749d10a9.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1212274033958191204",
      "type": "Default",
      "timestamp": "2024-02-28T09:44:12.658+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "yep! thats the base premise for interoperability at the current stage, not perfect - but we have more coming!",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1212274222718787595",
      "type": "Default",
      "timestamp": "2024-02-28T09:44:57.662+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "eg you can do a state proof of chain A within chain B, and during settlement doublecheck you used the right root hash cross chain",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1212274640647626802",
      "type": "Default",
      "timestamp": "2024-02-28T09:46:37.304+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "state proofs of self within the appchain are a lot easier since we offer historical state root hash tracking on a block to block basis, thanks to this leveraging privacy techniques such as append only trees becomes super easy",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1212274822793531412",
      "type": "Default",
      "timestamp": "2024-02-28T09:47:20.731+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "and account updates dont have historical state preconditions (like action state does), so thats a lot harder to do with the L1 protocol",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1212954774052544612",
      "type": "Default",
      "timestamp": "2024-03-01T06:49:13.744+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thanks @ember and @maht0rz! Protokit is great and I will try it.\n\nCan the address of a smart contract and the actionState of its actions be used as private inputs in my smart contract? I want to check whether a data hash is included in an existing action while keeping the action itself secret. If the hash is included, I will dispatch a new action from my smart contract. Is this possible?",
      "author": {
        "id": "1186890131421012069",
        "name": "tenacious_mango_64264",
        "discriminator": "0000",
        "nickname": "ss",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1186890131421012069/fb7a8bda39452f3f559e2e731db569b9.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "192258292544700426",
          "name": "3221229683",
          "discriminator": "0000",
          "nickname": "ember",
          "color": "#FFFFFF",
          "isBot": false,
          "roles": [
            {
              "id": "1220065449098743838",
              "name": "Node-Operations",
              "color": "#FFFFFF",
              "position": 20
            },
            {
              "id": "1220064445863038996",
              "name": "zkApps",
              "color": "#FFFFFF",
              "position": 19
            },
            {
              "id": "1220065628602503188",
              "name": "Testing",
              "color": "#FFFFFF",
              "position": 18
            },
            {
              "id": "1291345674213920768",
              "name": "Rust-Node",
              "color": "#FFF7F7",
              "position": 17
            },
            {
              "id": "1259816280605851648",
              "name": "Links and Images",
              "color": "#FFFFFE",
              "position": 12
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/192258292544700426/avatars/51c1b2617db4f40414b845f4749d10a9.png?size=512"
        },
        {
          "id": "374663548174991362",
          "name": "maht0rz",
          "discriminator": "0000",
          "nickname": "maht0rz",
          "color": "#8B50FF",
          "isBot": false,
          "roles": [
            {
              "id": "846838836649525259",
              "name": "Mina Foundation",
              "color": "#8B50FF",
              "position": 138
            },
            {
              "id": "1146001284516827148",
              "name": "MF Engineering",
              "color": "#9B59B6",
              "position": 135
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "1090136219045867601",
              "name": "Gov Focus Group",
              "color": "#C02020",
              "position": 107
            },
            {
              "id": "1043261559478165567",
              "name": "ZK-peer-reviewer",
              "color": "#F87607",
              "position": 104
            },
            {
              "id": "1044272767060672624",
              "name": "Cohort 0 Mentor",
              "color": "#A84300",
              "position": 102
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "1121063832555634799",
              "name": "zkIgnite Cohort 1",
              "color": "#F38705",
              "position": 97
            },
            {
              "id": "754653466344947782",
              "name": "QA Task Force",
              "color": "#B2F3B8",
              "position": 80
            },
            {
              "id": "1083404176391929916",
              "name": "Mina Community Creator",
              "color": "#F68B8B",
              "position": 74
            },
            {
              "id": "1285544625037115557",
              "name": "MinaCon",
              "color": "#FAFFD6",
              "position": 25
            },
            {
              "id": "1205541869375979601",
              "name": "UMT",
              "color": "#FFFFFF",
              "position": 22
            },
            {
              "id": "1220064445863038996",
              "name": "zkApps",
              "color": "#FFFFFF",
              "position": 19
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
        }
      ]
    },
    {
      "id": "1213569923427598386",
      "type": "Default",
      "timestamp": "2024-03-02T23:33:36.784+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@ss if you use those values only as private inputs you can't prove their connection to the actual values. By making them public (putting them in a precondition) you enable the Mina node to verify their correctness",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "1186890131421012069",
          "name": "tenacious_mango_64264",
          "discriminator": "0000",
          "nickname": "ss",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/avatars/1186890131421012069/fb7a8bda39452f3f559e2e731db569b9.png?size=512"
        }
      ]
    },
    {
      "id": "1213763112348684338",
      "type": "Default",
      "timestamp": "2024-03-03T12:21:16.612+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@gregor Maybe I didn't express my question well. I want to prove that a certain piece of data is included in an action, but I don't want to disclose the action itself or its dispatcher (a specific smart contract). Is this possible?",
      "author": {
        "id": "1186890131421012069",
        "name": "tenacious_mango_64264",
        "discriminator": "0000",
        "nickname": "ss",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1186890131421012069/fb7a8bda39452f3f559e2e731db569b9.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "568421780331692042",
          "name": "mitschabaude",
          "discriminator": "0000",
          "nickname": "gregor",
          "color": "#6991D8",
          "isBot": false,
          "roles": [
            {
              "id": "751144417951219713",
              "name": "Core Engineers",
              "color": "#6991D8",
              "position": 122
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "916351299988107364",
              "name": "zkApps-bootcamp-2021",
              "color": "#F19924",
              "position": 95
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
        }
      ]
    },
    {
      "id": "1213790340146921482",
      "type": "Reply",
      "timestamp": "2024-03-03T14:09:28.225+04:00",
      "timestampEdited": "2024-03-04T15:09:01.214+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Yes and this would be the default when you use actions and reducer\n\nEDIT: didn't read everything before anwering - it's true that not revealing the specific action is the default, but it's not possible to hide the dispatcher",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "1186890131421012069",
          "name": "tenacious_mango_64264",
          "discriminator": "0000",
          "nickname": "ss",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/avatars/1186890131421012069/fb7a8bda39452f3f559e2e731db569b9.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1213763112348684338",
        "channelId": "1211885909834989638",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1213822681485410314",
      "type": "Default",
      "timestamp": "2024-03-03T16:17:59.001+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "According to my understanding, *reducer* can only access the actions of the smart contract it belongs to and not the actions dispatched by other smart contracts. I want to use the address and actionState of a specific smart contract as parameters in my smart contract, then call *Mina.fetchActions()* to retrieve the actions of that smart contract, and prove that **my data is included in an action dispatched by a smart contract**. Similarly, I cannot disclose the address or actions of that smart contract to the public.\n\nBTW, I have asked a related question. Could you please help me clarify each point of this question?  https://discord.com/channels/484437221055922177/1210437491530928158",
      "author": {
        "id": "1186890131421012069",
        "name": "tenacious_mango_64264",
        "discriminator": "0000",
        "nickname": "ss",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/1186890131421012069/fb7a8bda39452f3f559e2e731db569b9.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1214132868301717564",
      "type": "Reply",
      "timestamp": "2024-03-04T12:50:33.301+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Can you call reduce in your SmartContract with actions to add the actions to the MerkleMap and store the root of this Merkle Map on-chain? \nIn this case, you can check that your data is included in the Merkle Map:\nExamples:\nhttps://github.com/o1-labs/o1js/blob/f39d4612c7104f2ef394a5fb7348d62b1612c12f/src/examples/zkapps/merkle-tree-and-actions.ts\nhttps://github.com/dfstio/merkle-map-demo/blob/main/src/multiple-choice/contract.ts#L121\n\nAlternatively, you can load all actions and do provable calculations of the actionState based on your data, something similar to the\nhttps://github.com/dfstio/merkle-map-demo/blob/main/src/lib/hash.ts#L25",
      "author": {
        "id": "964566918482784306",
        "name": "dfst.io",
        "discriminator": "0000",
        "nickname": "DFST",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          },
          {
            "id": "1259816280605851648",
            "name": "Links and Images",
            "color": "#FFFFFE",
            "position": 12
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "1186890131421012069",
          "name": "tenacious_mango_64264",
          "discriminator": "0000",
          "nickname": "ss",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/avatars/1186890131421012069/fb7a8bda39452f3f559e2e731db569b9.png?size=512"
        }
      ],
      "reference": {
        "messageId": "1213822681485410314",
        "channelId": "1211885909834989638",
        "guildId": "484437221055922177"
      }
    },
    {
      "id": "1214166080101154826",
      "type": "Default",
      "timestamp": "2024-03-04T15:02:31.611+04:00",
      "timestampEdited": "2024-03-04T15:02:42.801+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@ss \n> According to my understanding, reducer can only access the actions of the smart contract it belongs to and not the actions dispatched by other smart contracts. I want to use the address and actionState of a specific smart contract as parameters in my smart contract, then call Mina.fetchActions() to retrieve the actions of that smart contract, and prove that my data is included in an action dispatched by a smart contract.\nthis is in fact possible with reducer, as its purpose is just processing any list of actions. you just have to turn off the precondition it automatically sets on the contract, `useActionStatePrecondition: false`, and set that precondition manually on an account update for the other contract instead.\n\nexample for processing actions on another account is here:\nhttps://github.com/o1-labs/o1js/blob/64a4bebb8538565d62374551b9df95c2503b41bf/src/examples/zkapps/dex/dex-with-actions.ts#L260-L288",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "964566918482784306",
              "name": "dfst.io",
              "discriminator": "0000",
              "nickname": "DFST",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/964566918482784306/avatars/6d2f9b5ac3d3e9135840e45e13230dd8.png?size=512"
            }
          ]
        }
      ],
      "mentions": [
        {
          "id": "1186890131421012069",
          "name": "tenacious_mango_64264",
          "discriminator": "0000",
          "nickname": "ss",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/avatars/1186890131421012069/fb7a8bda39452f3f559e2e731db569b9.png?size=512"
        }
      ]
    },
    {
      "id": "1214166426257195059",
      "type": "Default",
      "timestamp": "2024-03-04T15:03:54.141+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "in general, anything you can assert in a smart contract about your own state, you can also assert about the state of other accounts",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1214166834748854333",
      "type": "Default",
      "timestamp": "2024-03-04T15:05:31.533+04:00",
      "timestampEdited": "2024-03-04T15:06:26.478+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "> Similarly, I cannot disclose the address or actions of that smart contract to the public.\n@ss this is where what I wrote fails - including an account update of that other contract to set a precondition on it would reveal its address",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "1186890131421012069",
          "name": "tenacious_mango_64264",
          "discriminator": "0000",
          "nickname": "ss",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/avatars/1186890131421012069/fb7a8bda39452f3f559e2e731db569b9.png?size=512"
        }
      ]
    },
    {
      "id": "1214166947940278292",
      "type": "Default",
      "timestamp": "2024-03-04T15:05:58.52+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "so after all what I wrote here applies: https://discord.com/channels/484437221055922177/1211885909834989638/1213569923427598386",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    }
  ],
  "messageCount": 26
}