{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1130868060539076778",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "Composability onlyOwner() failed to check owner",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T14:54:41.8831987+04:00",
  "messages": [
    {
      "id": "1130868060539076778",
      "type": "Default",
      "timestamp": "2023-07-18T18:25:56.145+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "WalletState contract, purpose: hold wallet onchain stated like transactionLimit, dailyLimit, and paused. Should only be able to call by Wallet contract\n```\nexport class WalletStates extends SmartContract implements IWalletState {\n  @state(PublicKey) owner = State<PublicKey>(); // should be the wallet address\n  @state(Field) transactionLimit = State<Field>();\n  @state(Field) dailyLimit = State<Field>();\n  @state(Bool) paused = State<Bool>();\n\n  events = {\n    TransactionLimitChanged: provablePure({\n      limit: Field,\n    }),\n    DailyLimitChanged: provablePure({\n      limit: Field,\n    }),\n    Paused: provablePure({\n      account: PublicKey,\n    }),\n    Unpaused: provablePure({\n      account: PublicKey,\n    }),\n    OwnershipTransferred: provablePure({\n      previousOwner: PublicKey,\n      newOwner: PublicKey,\n    }),\n  };\n\n  deploy(args: DeployArgs) {\n    super.deploy(args);\n    this.account.permissions.set({\n      ...Permissions.default(), \n    });\n    this.transactionLimit.set(Field(0));\n    this.dailyLimit.set(Field(0));\n    this.paused.set(Bool(false));\n  }\n\n  /**\n   * @notice Throws if called by any account other than the owner.\n   */\n  @method\n  onlyOwner() {\n    if (this.owner.getAndAssertEquals() !== this.sender) {\n      return;\n    }\n  }\n\n  /**\n   * @notice Set the transaction limit\n   * @param newTransactionLimit\n   * @returns Bool(true) if the transaction limit was changed, false otherwise\n   */\n  @method\n  public setTransactionLimit(newTransactionLimit: Field): Bool {\n    this.onlyOwner();\n    const transactionLimit = this.transactionLimit.getAndAssertEquals();\n    if (\n      newTransactionLimit === Field(0) ||\n      newTransactionLimit === transactionLimit\n    ) {\n      return Bool(false);\n    }\n    this.transactionLimit.set(newTransactionLimit);\n    this.emitEvent('TransactionLimitChanged', {\n      limit: newTransactionLimit,\n    });\n    return Bool(true);\n  }\n}```\n\ncontinue...",
      "author": {
        "id": "625988499056754688",
        "name": "iamdev",
        "discriminator": "0000",
        "nickname": "IaM [ZK] <DEV>",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/625988499056754688/ca3bcee231636cd4efa91c804ed7442f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130868095037214812",
      "type": "ChannelNameChange",
      "timestamp": "2023-07-18T18:26:04.37+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Changed the channel name: Composability onlyOwner() failed to check owner",
      "author": {
        "id": "625988499056754688",
        "name": "iamdev",
        "discriminator": "0000",
        "nickname": "IaM [ZK] <DEV>",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/625988499056754688/ca3bcee231636cd4efa91c804ed7442f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130868142088933467",
      "type": "Default",
      "timestamp": "2023-07-18T18:26:15.588+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Wallet contract:\n```\nexport class WalletZkApp extends SmartContract implements IWalletZkApp {\n  @state(Field) passwordTree = State<Field>(); // Merkle root of the password tree\n  @state(Field) committedGuardians = State<Field>(); // Committed guardians\n  @state(PublicKey) guardianZkApp = State<PublicKey>(); // Guardian zkapp address\n  @state(PublicKey) recoveryZkApp = State<PublicKey>(); // Recovery zkapp address\n  @state(PublicKey) walletStates = State<PublicKey>(); // Wallet states\n\n  events = {\n    GuardianAdded: provablePure({\n      guardianId: Field,\n      commitment: Field,\n    }),\n    Withdraw: provablePure({\n      from: PublicKey,\n      to: PublicKey,\n      amount: UInt64,\n    }),\n    Paused: provablePure({\n      account: PublicKey,\n    }),\n    Unpaused: provablePure({\n      account: PublicKey,\n    }),\n  };\n\n\n  deploy(args: DeployArgs) {\n    super.deploy(args);\n    this.account.permissions.set({\n      ...Permissions.default(),\n      setDelegate: Permissions.proof(),\n      setPermissions: Permissions.proof(),\n      setVerificationKey: Permissions.proof(),\n      setZkappUri: Permissions.proof(),\n      incrementNonce: Permissions.proof(),\n      setVotingFor: Permissions.proof(),\n      setTiming: Permissions.proof(),\n    });\n    this.committedGuardians.set(Field(0));\n  }\n@method\n  public setTransactionLimit(newTransactionLimit: Field): Bool {\n    const walletStatesAddress = this.walletStates.getAndAssertEquals();\n    if (walletStatesAddress === PublicKey.empty()) {\n      return Bool(false);\n    }\n    const walletStates = new WalletStates(walletStatesAddress);\n    return walletStates.setTransactionLimit(newTransactionLimit);\n  }\n}\n```\ncontinue..",
      "author": {
        "id": "625988499056754688",
        "name": "iamdev",
        "discriminator": "0000",
        "nickname": "IaM [ZK] <DEV>",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/625988499056754688/ca3bcee231636cd4efa91c804ed7442f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130868489528287262",
      "type": "Default",
      "timestamp": "2023-07-18T18:27:38.424+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Testing:\n```\ndescribe('#setTransactionLimit', () => {\n    it('wallet smart contract should be able to set transaction limit', async () => {\n      await localDeploy();\n      const txn = await Mina.transaction(deployerAccount, () => {\n        walletZkApp.setTransactionLimit(Field(100));\n      });\n      await txn.prove();\n      await txn.sign([deployerKey]).send();\n\n      const transactionLimit = await zkApp.transactionLimit.getAndAssertEquals();\n      expect(transactionLimit).toEqual(Field(100));\n    });\n    it('should fail when not called by the wallet address', async () => {\n      await localDeploy();\n      const txn = await Mina.transaction(senderAccount, () => {\n        zkApp.setTransactionLimit(Field(100));\n      });\n      await txn.prove();\n      await txn.sign([senderKey]).send();\n      const transactionLimit = await zkApp.transactionLimit.getAndAssertEquals();\n      expect(transactionLimit).toEqual(Field(0));\n    });\n  });```\n\n WalletState › #setTransactionLimit › should fail when not called by the wallet address\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n    @@ -1,10 +1,10 @@\n      Field {\n        \"value\": Array [\n          0,\n          Uint8Array [\n    -       0,\n    +       100,\n            0,\n            0,\n            0,\n            0,\n            0,\n\n      105 |       await txn.sign([senderKey]).send();\n      106 |       const transactionLimit = await zkApp.transactionLimit.getAndAssertEquals();\n> 107 |       expect(transactionLimit).toEqual(Field(0));\n          |                                ^\n      108 |     });\n      109 |   });\n      110 |   // describe('#setDailyLimit', () => {\n\n      at Object.<anonymous> (src/wallet/states/WalletState.test.ts:107:32)",
      "author": {
        "id": "625988499056754688",
        "name": "iamdev",
        "discriminator": "0000",
        "nickname": "IaM [ZK] <DEV>",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/625988499056754688/ca3bcee231636cd4efa91c804ed7442f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130868652103716927",
      "type": "Default",
      "timestamp": "2023-07-18T18:28:17.185+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I expect this test to be failed because the WalletZkApp smart contract is the owner of the WalletState:\n``` const txn = await Mina.transaction(senderAccount, () => {\n        zkApp.setTransactionLimit(Field(100));\n      });\n      await txn.prove();\n      await txn.sign([senderKey]).send();```",
      "author": {
        "id": "625988499056754688",
        "name": "iamdev",
        "discriminator": "0000",
        "nickname": "IaM [ZK] <DEV>",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/625988499056754688/ca3bcee231636cd4efa91c804ed7442f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130869006715338822",
      "type": "Default",
      "timestamp": "2023-07-18T18:29:41.731+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "```\n  @method\n  onlyOwner() {\n    if (this.owner.getAndAssertEquals() !== this.sender) {\n      return;\n    }\n  }\n```\n\n=> \n\n```\n  @method\n  onlyOwner(expectedOwner: PublicKey) {\n    this.owner.getAndAssertEquals();\n    this.owner.assertEquals(expectedOwner);\n  }\n```\n\nTry this?",
      "author": {
        "id": "201337099700535297",
        "name": "45930",
        "discriminator": "0000",
        "nickname": "45930",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1266133384632078347",
            "name": "o1-exploration-team",
            "color": "#63CCF9",
            "position": 129
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1249795469157335081",
            "name": "NExT",
            "color": "#B47936",
            "position": 103
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130869176517533856",
      "type": "Default",
      "timestamp": "2023-07-18T18:30:22.215+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "You can't use `if` in the circuit",
      "author": {
        "id": "201337099700535297",
        "name": "45930",
        "discriminator": "0000",
        "nickname": "45930",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1266133384632078347",
            "name": "o1-exploration-team",
            "color": "#63CCF9",
            "position": 129
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1249795469157335081",
            "name": "NExT",
            "color": "#B47936",
            "position": 103
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130869232452784168",
      "type": "Default",
      "timestamp": "2023-07-18T18:30:35.551+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I don't understand, the WalletState contract has  onchain owner state:\n@state(PublicKey) owner = State<PublicKey>(); // should be the wallet address",
      "author": {
        "id": "625988499056754688",
        "name": "iamdev",
        "discriminator": "0000",
        "nickname": "IaM [ZK] <DEV>",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/625988499056754688/ca3bcee231636cd4efa91c804ed7442f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130869346785300500",
      "type": "Default",
      "timestamp": "2023-07-18T18:31:02.81+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "also set in localdeploy:\n```\nasync function localDeploy() {\n    const txn = await Mina.transaction(deployerAccount, () => {\n      AccountUpdate.fundNewAccount(deployerAccount, 2);\n      walletZkApp.deploy({ zkappKey: walletZkAppPrivateKey });\n      zkApp.deploy({ zkappKey: zkAppPrivateKey });\n      zkApp.owner.set(walletZkApp.address);\n      walletZkApp.walletStates.set(zkApp.address);\n    });\n    await txn.prove();\n    await txn\n      .sign([deployerKey, zkAppPrivateKey, walletZkAppPrivateKey])\n      .send();\n  }```",
      "author": {
        "id": "625988499056754688",
        "name": "iamdev",
        "discriminator": "0000",
        "nickname": "IaM [ZK] <DEV>",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/625988499056754688/ca3bcee231636cd4efa91c804ed7442f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130869544194416733",
      "type": "Default",
      "timestamp": "2023-07-18T18:31:49.876+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "right.. so ```assertEqualsthis.owner.assertEquals(this.sender);```??",
      "author": {
        "id": "625988499056754688",
        "name": "iamdev",
        "discriminator": "0000",
        "nickname": "IaM [ZK] <DEV>",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/625988499056754688/ca3bcee231636cd4efa91c804ed7442f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130869773794803782",
      "type": "Default",
      "timestamp": "2023-07-18T18:32:44.617+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "`getAndAssertEquals` gets the chain state and asserts that it equals your local state.  You can't use any on chain state without constraining it because the on-chain state may change.",
      "author": {
        "id": "201337099700535297",
        "name": "45930",
        "discriminator": "0000",
        "nickname": "45930",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1266133384632078347",
            "name": "o1-exploration-team",
            "color": "#63CCF9",
            "position": 129
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1249795469157335081",
            "name": "NExT",
            "color": "#B47936",
            "position": 103
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130869914161401889",
      "type": "Default",
      "timestamp": "2023-07-18T18:33:18.083+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "You need 2 assertions: one that the owner on chain is the owner you have in your local instance, and a second to assert that that address is the sender.",
      "author": {
        "id": "201337099700535297",
        "name": "45930",
        "discriminator": "0000",
        "nickname": "45930",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1266133384632078347",
            "name": "o1-exploration-team",
            "color": "#63CCF9",
            "position": 129
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1249795469157335081",
            "name": "NExT",
            "color": "#B47936",
            "position": 103
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130870273516777593",
      "type": "Default",
      "timestamp": "2023-07-18T18:34:43.76+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "right let me try that",
      "author": {
        "id": "625988499056754688",
        "name": "iamdev",
        "discriminator": "0000",
        "nickname": "IaM [ZK] <DEV>",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/625988499056754688/ca3bcee231636cd4efa91c804ed7442f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1130871642424356966",
      "type": "Default",
      "timestamp": "2023-07-18T18:40:10.133+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "yap that works\n```\n WalletState\n    ✓ generates and deploys the `WalletStates` smart contract (3593 ms)\n    ✓ generates and deploys the `WalletZkApp` smart contract (1071 ms)\n    #setTransactionLimit\n      ✓ wallet smart contract should be able to set transaction limit (8323 ms)\n      ✕ should fail when not called by the wallet address (1577 ms)\n\n  ● WalletState › #setTransactionLimit › should fail when not called by the wallet address\n\n    Field.assertEquals(): 11649208783870261658852235007209023360685416420197729819945252498569184664642 != 23769248540794418378257340546839235890109910523852404789411785994478791515697```",
      "author": {
        "id": "625988499056754688",
        "name": "iamdev",
        "discriminator": "0000",
        "nickname": "IaM [ZK] <DEV>",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/625988499056754688/ca3bcee231636cd4efa91c804ed7442f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDE80",
            "code": "rocket",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f680.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "201337099700535297",
              "name": "45930",
              "discriminator": "0000",
              "nickname": "45930",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1130877971285159966",
      "type": "Default",
      "timestamp": "2023-07-18T19:05:19.051+04:00",
      "timestampEdited": "2023-07-18T19:17:16.192+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "working code:\n```/**\n   * @notice Throws if called by any account other than the owner.\n   */\n  @method\n  onlyOwner(sender: PublicKey) {\n    const owner = this.owner.getAndAssertEquals();\n    console.log('owner', owner.toBase58());\n    owner.assertEquals(sender);\n  }\n\n\n/**\n   * @notice Set the transaction limit\n   * @param newTransactionLimit\n   * @returns Bool(true) if the transaction limit was changed, false otherwise\n   */\n  @method\n  public setTransactionLimit(sender: PublicKey, newTransactionLimit: Field): Bool {\n    this.sender.assertEquals(sender);\n    this.onlyOwner(sender);\n    if (newTransactionLimit === Field(0)) return Bool(false);\n    this.transactionLimit.getAndAssertEquals();\n    \n    this.transactionLimit.set(newTransactionLimit);\n    this.emitEvent('TransactionLimitChanged', {\n      limit: newTransactionLimit,\n    });\n    return Bool(true);\n  }```",
      "author": {
        "id": "625988499056754688",
        "name": "iamdev",
        "discriminator": "0000",
        "nickname": "IaM [ZK] <DEV>",
        "color": "#C02020",
        "isBot": false,
        "roles": [
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1158450061982847106",
            "name": "Cohort 2 Mentors",
            "color": "#E74C3C",
            "position": 101
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/625988499056754688/ca3bcee231636cd4efa91c804ed7442f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    }
  ],
  "messageCount": 15
}