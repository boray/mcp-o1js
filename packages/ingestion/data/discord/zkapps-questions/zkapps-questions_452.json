{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1197093876146647050",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "How can I store Key Value Pairs in a Smart Contract?",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T12:13:44.8186305+04:00",
  "messages": [
    {
      "id": "1197093876146647050",
      "type": "Default",
      "timestamp": "2024-01-17T12:23:41.002+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "How can I store Key Value Pair in a Smart Contract? I'm looking for something like in the MerkleMap set(key: Field, value: Field), get(key: Field). However, I want to store them as a @state of the contract",
      "author": {
        "id": "543679579617755156",
        "name": "onurinanc",
        "discriminator": "0000",
        "nickname": "onurinanc",
        "color": "#E74C3C",
        "isBot": false,
        "roles": [
          {
            "id": "1204059991435251723",
            "name": "Technical Reviewer - Navigators",
            "color": "#E74C3C",
            "position": 105
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/embed/avatars/3.png"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1197236535033081927",
      "type": "Default",
      "timestamp": "2024-01-17T21:50:33.531+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Hello @onurinanc! Unfortunately, the Mina on chain state is limited to 8 Field elements, so you cannot store more than 8 Field equivalent of data on chain. A possible solution to store everything on chain (btw we mean the Mina Blockchain when we say on chain) would be using different smart contracts to store arbitrary amount of data. I can share some resources on this if you like. Another commonly used approach is storing data off chain, and proving it on chain with some kind of constant sized proving mechanism, like a merkle tree. When you go off chain, there is no limit on how and where to store your data, you can store it on a different blockchain or a data availability layer, you can simply have it on a centralized data base, or you can store it in client side (or get it from the user at the time of request). If you share more on your application and architecture, I may be able to recommend an approach over another. Each has unique strengths!",
      "author": {
        "id": "523199492716101653",
        "name": "yunusgurlek",
        "discriminator": "0000",
        "nickname": "Yunus Gürlek",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1204059991435251723",
            "name": "Technical Reviewer - Navigators",
            "color": "#E74C3C",
            "position": 105
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/embed/avatars/0.png"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "760504342889103401",
            "name": "Mina_Spectrum",
            "code": "Mina_Spectrum",
            "isAnimated": false,
            "imageUrl": "https://cdn.discordapp.com/emojis/760504342889103401.png"
          },
          "count": 1,
          "users": [
            {
              "id": "543679579617755156",
              "name": "onurinanc",
              "discriminator": "0000",
              "nickname": "onurinanc",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/embed/avatars/3.png"
            }
          ]
        }
      ],
      "mentions": [
        {
          "id": "543679579617755156",
          "name": "onurinanc",
          "discriminator": "0000",
          "nickname": "onurinanc",
          "color": "#E74C3C",
          "isBot": false,
          "roles": [
            {
              "id": "1204059991435251723",
              "name": "Technical Reviewer - Navigators",
              "color": "#E74C3C",
              "position": 105
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/embed/avatars/3.png"
        }
      ]
    },
    {
      "id": "1197237092204433541",
      "type": "Default",
      "timestamp": "2024-01-17T21:52:46.371+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Moreover, there is Protokit, a ZK rollup SDK on Mina. Using Protokit, you can achieve a very similar developer experience to Solidity, where you can store your values like key / value pairs on the sequencer's mempol. Just check protokit's twitter for additional resources and how to start using https://twitter.com/proto_kit. Protokit is also an off chain storing option. It achieves being trustless through ZKP settling, just like other ZK rollups (e.g. Scroll)",
      "author": {
        "id": "523199492716101653",
        "name": "yunusgurlek",
        "discriminator": "0000",
        "nickname": "Yunus Gürlek",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1204059991435251723",
            "name": "Technical Reviewer - Navigators",
            "color": "#E74C3C",
            "position": 105
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/embed/avatars/0.png"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "760504342889103401",
            "name": "Mina_Spectrum",
            "code": "Mina_Spectrum",
            "isAnimated": false,
            "imageUrl": "https://cdn.discordapp.com/emojis/760504342889103401.png"
          },
          "count": 3,
          "users": [
            {
              "id": "138034851872899081",
              "name": "rpanic",
              "discriminator": "0000",
              "nickname": "rpanic",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/138034851872899081/a3ac1d3e9ff9778efba8901ccb03783a.png?size=512"
            },
            {
              "id": "374663548174991362",
              "name": "maht0rz",
              "discriminator": "0000",
              "nickname": "maht0rz",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
            },
            {
              "id": "543679579617755156",
              "name": "onurinanc",
              "discriminator": "0000",
              "nickname": "onurinanc",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/embed/avatars/3.png"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1197390604976521347",
      "type": "Default",
      "timestamp": "2024-01-18T08:02:46.668+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I am guessing you are asking this for the  Mina Learn-Earn program ( seeing that you are in mina navigator program as well). I used Merkle Maps  to store the key/value pairs.  (https://docs.minaprotocol.com/zkapps/tutorials/common-types-and-functions#merkle-map)\n\nHowever, If you are just asking this in general - Protokit has the best abstraction.",
      "author": {
        "id": "738552464004874242",
        "name": ".enderwiggins",
        "discriminator": "0000",
        "nickname": "EnderWiggins",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/738552464004874242/ab5dc56f23718d838fb6006e75a19a3b.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "Mina Documentation",
          "url": "https://docs.minaprotocol.com/zkapps/tutorials/common-types-and-functions",
          "timestamp": null,
          "description": "Website for documentation about Mina Protocol",
          "thumbnail": {
            "url": "https://images-ext-1.discordapp.net/external/_PJlmeDNad-_70g7jbEdYnu0Z3mezgosb1bPK642OJE/https/docs.minaprotocol.com/img/common/mina-logo.png",
            "width": 1120,
            "height": 630
          },
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDE4F",
            "code": "pray",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f64f.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "374663548174991362",
              "name": "maht0rz",
              "discriminator": "0000",
              "nickname": "maht0rz",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    }
  ],
  "messageCount": 4
}