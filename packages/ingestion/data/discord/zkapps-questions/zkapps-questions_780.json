{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1124870588561891359",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "Error while declaring own merkleMap",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T15:22:24.3450942+04:00",
  "messages": [
    {
      "id": "1124870588561891359",
      "type": "Default",
      "timestamp": "2023-07-02T05:14:07.398+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "So, I went on to declare a merklemap with key as publicKey type but am getting this error in update function, is there any way to convert key to this type? Would this declaration work?\n```export declare class AddressMerkleMap {\n    tree: InstanceType<typeof MerkleTree>;\n    /**\n     * Creates a new, empty Merkle Map.\n     * @returns A new MerkleMap\n     */\n    constructor();\n    _keyToIndex(key: PublicKey): bigint;\n    /**\n     * Sets a key of the merkle map to a given value.\n     * @param key The key to set in the map.\n     * @param key The value to set.\n     */\n    set(key: PublicKey, value: Field): void;\n    /**\n     * Returns a value given a key. Values are by default Field(0).\n     * @param key The key to get the value from.\n     * @returns The value stored at the key.\n     */\n    get(key: PublicKey): Field;\n    /**\n     * Returns the root of the Merkle Map.\n     * @returns The root of the Merkle Map.\n     */\n    getRoot(): Field;\n    /**\n     * Returns a circuit-compatible witness (also known as [Merkle Proof or Merkle Witness](https://computersciencewiki.org/index.php/Merkle_proof)) for the given key.\n     * @param key The key to make a witness for.\n     * @returns A MerkleMapWitness, which can be used to assert changes to the MerkleMap, and the witness's key.\n     */\n    getWitness(key: PublicKey): MerkleMapWitness;\n}```",
      "author": {
        "id": "933046995160014869",
        "name": "shashanktrivedi",
        "discriminator": "0000",
        "nickname": "Lordforever",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/embed/avatars/1.png"
      },
      "attachments": [
        {
          "id": "1124870588721266788",
          "url": "https://cdn.discordapp.com/attachments/1124870588561891359/1124870588721266788/image.png?ex=680ae1df&is=6809905f&hm=657d056279e179a1e6de8b49da7f036e5ebae34f8487d0a706b968d14b4e0b4c&",
          "fileName": "image.png",
          "fileSizeBytes": 273911
        }
      ],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1125059619191009340",
      "type": "Default",
      "timestamp": "2023-07-02T17:45:15.812+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "you can try converting the PublicKey to a Field using `toFields() ` https://docs.minaprotocol.com/zkapps/snarkyjs-reference/classes/Types.PublicKey#tofields",
      "author": {
        "id": "301752126491721730",
        "name": "blockbeard",
        "discriminator": "0000",
        "nickname": "angus_m",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/301752126491721730/0a8d7f37a46cb3c2ca757f772e60e497.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "Mina Documentation",
          "url": "https://docs.minaprotocol.com/zkapps/snarkyjs-reference/classes/Types.PublicKey",
          "timestamp": null,
          "description": "Website for documentation about Mina Protocol",
          "thumbnail": {
            "url": "https://images-ext-1.discordapp.net/external/_PJlmeDNad-_70g7jbEdYnu0Z3mezgosb1bPK642OJE/https/docs.minaprotocol.com/img/common/mina-logo.png",
            "width": 1120,
            "height": 630
          },
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "933046995160014869",
              "name": "shashanktrivedi",
              "discriminator": "0000",
              "nickname": "Lordforever",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/embed/avatars/1.png"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1125078921378009088",
      "type": "Reply",
      "timestamp": "2023-07-02T19:01:57.812+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "`key` is pressumable a `Field`, whereas `PublicKey` is a datastructure that consists of multiple elements (a `Field` and a `Bool`), you would have to hash the PublicKey to maintain a unique Field element",
      "author": {
        "id": "227173927712063508",
        "name": "trivo",
        "discriminator": "0000",
        "nickname": "Florian",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1300439738003619890",
            "name": "o1 Engineering",
            "color": "#00368B",
            "position": 130
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "952432654849028116",
            "name": "GCP",
            "color": "#E1C97A",
            "position": 113
          },
          {
            "id": "918156487434596374",
            "name": "MinaResearch Founding Member",
            "color": "#A5BEF3",
            "position": 108
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1227899957491535973",
            "name": "Delegation-Program",
            "color": "#FFFFFF",
            "position": 21
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/227173927712063508/avatars/af988f24ad028b7c1086768733982f08.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "301752126491721730",
              "name": "blockbeard",
              "discriminator": "0000",
              "nickname": "angus_m",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/301752126491721730/0a8d7f37a46cb3c2ca757f772e60e497.png?size=512"
            }
          ]
        }
      ],
      "mentions": [
        {
          "id": "933046995160014869",
          "name": "shashanktrivedi",
          "discriminator": "0000",
          "nickname": "Lordforever",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/embed/avatars/1.png"
        }
      ],
      "reference": {
        "messageId": "1124870588561891359",
        "channelId": "1124870588561891359",
        "guildId": "484437221055922177"
      }
    }
  ],
  "messageCount": 3
}