{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1165657591800668201",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "Abstract Merkle Witness",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T13:58:54.1721002+04:00",
  "messages": [
    {
      "id": "1165657591800668201",
      "type": "Default",
      "timestamp": "2023-10-22T18:27:06.756+04:00",
      "timestampEdited": "2023-10-22T18:42:56.211+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Suppose I have a zkApp/zkProgram app aimed at being reusable. It has a `@method` that uses a `merkle witness`. I'd like to create several instances of the app, each with a different merkle witness height. Is this possible to achive this? Could you provide any clue please?\n\n```ts\n @method transfer(address: Field, witness: AbstractMerkleWitness) {\n\n }\n```",
      "author": {
        "id": "226698101480488960",
        "name": "magestrio",
        "discriminator": "0000",
        "nickname": "magestrio",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/226698101480488960/190005bed69ed1260a1c91fc5680180f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1165901696342433842",
      "type": "Default",
      "timestamp": "2023-10-23T10:37:05.814+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "one way could be a factory-like pattern, similarly to \n```ts\nfunction factory(height: number) {\n  class MyMerkleWitness extends MerkleWitness(height) {}\n  class SimpleZkapp extends SmartContract {\n    @method verifyMerkleWitness(w: MyMerkleWitness, root: Field) {\n      w.calculateRoot(root);\n    }\n  }\n\n  return SimpleZkapp;\n}\n\nconst myContract = factory(8);\nawait myContract.compile();\n```",
      "author": {
        "id": "227173927712063508",
        "name": "trivo",
        "discriminator": "0000",
        "nickname": "Florian",
        "color": "#206694",
        "isBot": false,
        "roles": [
          {
            "id": "595716565014675466",
            "name": "o1 Labs",
            "color": "#206694",
            "position": 131
          },
          {
            "id": "1300439738003619890",
            "name": "o1 Engineering",
            "color": "#00368B",
            "position": 130
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "952432654849028116",
            "name": "GCP",
            "color": "#E1C97A",
            "position": 113
          },
          {
            "id": "918156487434596374",
            "name": "MinaResearch Founding Member",
            "color": "#A5BEF3",
            "position": 108
          },
          {
            "id": "1010215418604040232",
            "name": "zkapp-beta-tester",
            "color": "#E06304",
            "position": 99
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "893400661759246366",
            "name": "Applicant",
            "color": null,
            "position": 24
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1227899957491535973",
            "name": "Delegation-Program",
            "color": "#FFFFFF",
            "position": 21
          },
          {
            "id": "1220065449098743838",
            "name": "Node-Operations",
            "color": "#FFFFFF",
            "position": 20
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          },
          {
            "id": "1220065628602503188",
            "name": "Testing",
            "color": "#FFFFFF",
            "position": 18
          },
          {
            "id": "1291345674213920768",
            "name": "Rust-Node",
            "color": "#FFF7F7",
            "position": 17
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/guilds/484437221055922177/users/227173927712063508/avatars/af988f24ad028b7c1086768733982f08.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1165913638356385792",
      "type": "Default",
      "timestamp": "2023-10-23T11:24:33.012+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Can we achive any kind of abstraction to the field elements (provable data)? Like to define the Provable interface with the functions we want to reach in the `@method` and work only with the interface in zk app? I tried some ways, but failed. Even if my interface extends from `Provable` I got the error message.",
      "author": {
        "id": "226698101480488960",
        "name": "magestrio",
        "discriminator": "0000",
        "nickname": "magestrio",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/226698101480488960/190005bed69ed1260a1c91fc5680180f.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1165917882899763302",
      "type": "Default",
      "timestamp": "2023-10-23T11:41:24.99+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "zkApp method input types are picked up by the `@method` decorator and for that they have to be in a very specific format. Namely, a class that extends the Provable interface",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1165918487890374656",
      "type": "Default",
      "timestamp": "2023-10-23T11:43:49.231+04:00",
      "timestampEdited": "2023-10-23T11:45:01.365+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "It needs to be a class because the decorator needs to obtain a concrete value, which implements the provable interface, at runtime. It can't be just a type.\n\nThis is more explicit in the Zkprogram interface, where you need to provide the runtime values for provable input types as a separate argument `privateInputs`",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    }
  ],
  "messageCount": 5
}