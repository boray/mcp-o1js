{
  "guild": {
    "id": "484437221055922177",
    "name": "Mina Protocol",
    "iconUrl": "https://cdn.discordapp.com/icons/484437221055922177/60f5907d2f7e3804b704a7153cae7768.png?size=512"
  },
  "channel": {
    "id": "1047485648367529985",
    "type": "GuildPublicThread",
    "categoryId": "1047214314349658172",
    "category": "zkapps-questions",
    "name": "Smart contract methods unit testing",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2025-04-24T17:53:02.5473335+04:00",
  "messages": [
    {
      "id": "1047485648367529985",
      "type": "Default",
      "timestamp": "2022-11-30T16:13:59.913+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Guys, is there a way to explicitly set the state of a locally deployed smart contract running within jest test suite? My zkApp tests take crazy long because I run whole suites of tests to replicate relevant scenarios but I figured, if I could just force the state to certain values I could create those scenarios faster and test methods more like the unit tests are done. Many thanks in advance for the tips!",
      "author": {
        "id": "281787111718518786",
        "name": "_renzokuken",
        "discriminator": "0000",
        "nickname": "renzokuken",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "✅",
            "code": "white_check_mark",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/2705.svg"
          },
          "count": 3,
          "users": [
            {
              "id": "301752126491721730",
              "name": "blockbeard",
              "discriminator": "0000",
              "nickname": "angus_m",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/301752126491721730/0a8d7f37a46cb3c2ca757f772e60e497.png?size=512"
            },
            {
              "id": "374663548174991362",
              "name": "maht0rz",
              "discriminator": "0000",
              "nickname": "maht0rz",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
            },
            {
              "id": "568421780331692042",
              "name": "mitschabaude",
              "discriminator": "0000",
              "nickname": "gregor",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
            }
          ]
        },
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "301752126491721730",
              "name": "blockbeard",
              "discriminator": "0000",
              "nickname": "angus_m",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/301752126491721730/0a8d7f37a46cb3c2ca757f772e60e497.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1047486462729388084",
      "type": "Default",
      "timestamp": "2022-11-30T16:17:14.072+04:00",
      "timestampEdited": "2022-11-30T16:17:52.139+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "i’d extend your contract class for testing with a custom @method init  (or similar) to hydrate your state for each test accordingly.\n\nHowever if you want to go one step further, depending on what exactly you plan to be testing - you can also stub/mock the snarky methods for accessing state",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1047486999000535050",
      "type": "Default",
      "timestamp": "2022-11-30T16:19:21.929+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thank you! I like the first suggestion, seems simple enough.",
      "author": {
        "id": "281787111718518786",
        "name": "_renzokuken",
        "discriminator": "0000",
        "nickname": "renzokuken",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1047555333121384498",
      "type": "Default",
      "timestamp": "2022-11-30T20:50:54.053+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I found something weird...\n\nI have a smart contract called `Mac`, something of the form\n```typescript\nexport class Mac extends SmartContract {\n...\n}\n```\nthen just for test purposes I create a `TMac` smart contract which in addition has a method called `morph` that allows me to set the state during tests\n```typescript\nexport class TMac extends Mac {\n  @method morph(commitment: Field, automaton_state: Field, memory: Field) {\n    this.commitment.set(commitment);\n    this.automaton_state.set(automaton_state);\n    this.memory.set(memory);\n  }\n}\n```\nweird thing is, when I am testing `Mac` it compiles and runs with no trouble, however if I attempt to do exactly the same with `TMac` I get\n```\n    Cannot prove execution of initialize(), no prover found. Try calling `await Mac.compile()` first, this will cache provers in the background.\n```\nit's almost like it ignores the inheritance and still attempts to use `Mac`. Of course I did update all the imports from `Mac` to `TMac`, maybe I am just not inheriting it properly?",
      "author": {
        "id": "281787111718518786",
        "name": "_renzokuken",
        "discriminator": "0000",
        "nickname": "renzokuken",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1047555758293778473",
      "type": "Default",
      "timestamp": "2022-11-30T20:52:35.422+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "My guess is, if you inherit a `SmartContract` from another `SmartContract` and compile it, it will still expect the parent smart contract, I cannot justify why, but that's what I observe.",
      "author": {
        "id": "281787111718518786",
        "name": "_renzokuken",
        "discriminator": "0000",
        "nickname": "renzokuken",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1047557475542515815",
      "type": "Default",
      "timestamp": "2022-11-30T20:59:24.846+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "works for me https://github.com/stove-labs/zk-htlc/blob/develop/src/HTLCPoseidonNative.ts#L4",
      "author": {
        "id": "374663548174991362",
        "name": "maht0rz",
        "discriminator": "0000",
        "nickname": "maht0rz",
        "color": "#8B50FF",
        "isBot": false,
        "roles": [
          {
            "id": "846838836649525259",
            "name": "Mina Foundation",
            "color": "#8B50FF",
            "position": 138
          },
          {
            "id": "1146001284516827148",
            "name": "MF Engineering",
            "color": "#9B59B6",
            "position": 135
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "1090136219045867601",
            "name": "Gov Focus Group",
            "color": "#C02020",
            "position": 107
          },
          {
            "id": "1043261559478165567",
            "name": "ZK-peer-reviewer",
            "color": "#F87607",
            "position": 104
          },
          {
            "id": "1044272767060672624",
            "name": "Cohort 0 Mentor",
            "color": "#A84300",
            "position": 102
          },
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "1121063832555634799",
            "name": "zkIgnite Cohort 1",
            "color": "#F38705",
            "position": 97
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          },
          {
            "id": "1083404176391929916",
            "name": "Mina Community Creator",
            "color": "#F68B8B",
            "position": 74
          },
          {
            "id": "1285544625037115557",
            "name": "MinaCon",
            "color": "#FAFFD6",
            "position": 25
          },
          {
            "id": "1205541869375979601",
            "name": "UMT",
            "color": "#FFFFFF",
            "position": 22
          },
          {
            "id": "1220064445863038996",
            "name": "zkApps",
            "color": "#FFFFFF",
            "position": 19
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "zk-htlc/HTLCPoseidonNative.ts at develop · stove-labs/zk-htlc",
          "url": "https://github.com/stove-labs/zk-htlc/blob/develop/src/HTLCPoseidonNative.ts",
          "timestamp": null,
          "description": "Contribute to stove-labs/zk-htlc development by creating an account on GitHub.",
          "color": "#1E2327",
          "thumbnail": {
            "url": "https://images-ext-1.discordapp.net/external/hN7Y1rWxdSbjHYNDdKz8roevxxQg9P-2_PJIvA5x0Zk/https/opengraph.githubassets.com/8b5d9979fcd7fcaa9c7a1b27922da25bde4493b761c3e0216ef5a54ee7087576/stove-labs/zk-htlc",
            "width": 1200,
            "height": 600
          },
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1047767911680458812",
      "type": "Default",
      "timestamp": "2022-12-01T10:55:36.731+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thank you for the example @maht0rz. I appreciate it. However, I am not sure how is this example valid for the question. In your case,  the `HTLCPoseidon` that is extended by `HTLCPoseidonNative` does implement both `depositIntoSelf` and `withdrawFromSelfTo`.\n\nWhat I understood from your suggestion is to inherit a class that would have an extra method only for test purposes (to set the state) and the main class of the smart contract that gets deployed would not have this method.\n\nI tried to follow your example and I implemented an interface hoping that would resolve the compilation issue but it was not the case unfortunately.",
      "author": {
        "id": "281787111718518786",
        "name": "_renzokuken",
        "discriminator": "0000",
        "nickname": "renzokuken",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "374663548174991362",
          "name": "maht0rz",
          "discriminator": "0000",
          "nickname": "maht0rz",
          "color": "#8B50FF",
          "isBot": false,
          "roles": [
            {
              "id": "846838836649525259",
              "name": "Mina Foundation",
              "color": "#8B50FF",
              "position": 138
            },
            {
              "id": "1146001284516827148",
              "name": "MF Engineering",
              "color": "#9B59B6",
              "position": 135
            },
            {
              "id": "1075313326499823676",
              "name": "zkApp E2E Tester",
              "color": "#E74C3C",
              "position": 117
            },
            {
              "id": "1090136219045867601",
              "name": "Gov Focus Group",
              "color": "#C02020",
              "position": 107
            },
            {
              "id": "1043261559478165567",
              "name": "ZK-peer-reviewer",
              "color": "#F87607",
              "position": 104
            },
            {
              "id": "1044272767060672624",
              "name": "Cohort 0 Mentor",
              "color": "#A84300",
              "position": 102
            },
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "1121063832555634799",
              "name": "zkIgnite Cohort 1",
              "color": "#F38705",
              "position": 97
            },
            {
              "id": "754653466344947782",
              "name": "QA Task Force",
              "color": "#B2F3B8",
              "position": 80
            },
            {
              "id": "1083404176391929916",
              "name": "Mina Community Creator",
              "color": "#F68B8B",
              "position": 74
            },
            {
              "id": "1285544625037115557",
              "name": "MinaCon",
              "color": "#FAFFD6",
              "position": 25
            },
            {
              "id": "1205541869375979601",
              "name": "UMT",
              "color": "#FFFFFF",
              "position": 22
            },
            {
              "id": "1220064445863038996",
              "name": "zkApps",
              "color": "#FFFFFF",
              "position": 19
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/374663548174991362/f6511739774fe43bc64418c6c064e1f4.png?size=512"
        }
      ]
    },
    {
      "id": "1047771594891726878",
      "type": "Default",
      "timestamp": "2022-12-01T11:10:14.877+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "One more thing I tried: I added the method `morph` to the main class just left it empty and defined its body in the extended class. Unfortunately the compiler still confuses it. I think I already exceeded a time budget for that, I will just do the test scenarios in regular way even if they run for crazy long.",
      "author": {
        "id": "281787111718518786",
        "name": "_renzokuken",
        "discriminator": "0000",
        "nickname": "renzokuken",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1048159235227258970",
      "type": "Default",
      "timestamp": "2022-12-02T12:50:35.535+04:00",
      "timestampEdited": "2022-12-02T12:50:43.27+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@renzokuken the reason for the behaviour you observe is that the `@method` decorators get executed on the parent class, and they determine what circuits are on the class etc",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "281787111718518786",
          "name": "_renzokuken",
          "discriminator": "0000",
          "nickname": "renzokuken",
          "color": "#FA7504",
          "isBot": false,
          "roles": [
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "931675496079585350",
              "name": "zkApp Builders Program - Cohort 1",
              "color": "#F37210",
              "position": 98
            },
            {
              "id": "1150768164850913322",
              "name": "zkIgnite Cohort 2",
              "color": "#E97404",
              "position": 96
            },
            {
              "id": "754653466344947782",
              "name": "QA Task Force",
              "color": "#B2F3B8",
              "position": 80
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
        }
      ]
    },
    {
      "id": "1048159623351369748",
      "type": "Default",
      "timestamp": "2022-12-02T12:52:08.071+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "it seems like there's no clean inheritance possible right now for smart contracts, because we manually associate metadata, like the stuff added by decorators, with a class, which doesn't make it into child classes",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1048159738728304692",
      "type": "Default",
      "timestamp": "2022-12-02T12:52:35.579+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "it may work if all decorated methods you test are on the child class",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1048161366239891486",
      "type": "Default",
      "timestamp": "2022-12-02T12:59:03.608+04:00",
      "timestampEdited": "2022-12-02T13:00:39.094+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "to solve your initial problem, I'd set the test up so that you compile only once in the beginning, and then you apply txs which create the initial state you want to test using the `proofsEnabled: false` flag",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1048161560591347742",
      "type": "Default",
      "timestamp": "2022-12-02T12:59:49.945+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "you can set / unset this flag in between transactions with `Local.setProofsEnabled(true / false)`",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1048161682490392606",
      "type": "Default",
      "timestamp": "2022-12-02T13:00:19.008+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "and it determines whether `tx.prove()` actually computes a proof (if `false`, it just inserts a dummy proof)",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDCA1",
            "code": "bulb",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f4a1.svg"
          },
          "count": 2,
          "users": [
            {
              "id": "201337099700535297",
              "name": "45930",
              "discriminator": "0000",
              "nickname": "45930",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/201337099700535297/5eb4e1dfa7edf8ddce5c4fdee8dc5bd3.png?size=512"
            },
            {
              "id": "281787111718518786",
              "name": "_renzokuken",
              "discriminator": "0000",
              "nickname": "renzokuken",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "1048905950704193647",
      "type": "Default",
      "timestamp": "2022-12-04T14:17:46.378+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thank you so much! I will give it a shot and let you guys know how it worked!",
      "author": {
        "id": "281787111718518786",
        "name": "_renzokuken",
        "discriminator": "0000",
        "nickname": "renzokuken",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1048908244761976842",
      "type": "Default",
      "timestamp": "2022-12-04T14:26:53.324+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "So basically,\n1. No inheritance, there is just the parent class\n2. I include a `@method` to explicitly set the state of the parent class\n3. This method is made to always fail with something like `Bool(false).assertTrue()` and reason for that is for people don't explicitly set the state\n4. In the test suite, I allow this method to run because of `proofsEnabled: false` flag\ndid I understood it correctly? Or maybe there is a way to form a tx that sets the state so that there is no need to implement the method from (2)?",
      "author": {
        "id": "281787111718518786",
        "name": "_renzokuken",
        "discriminator": "0000",
        "nickname": "renzokuken",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1048928581574742076",
      "type": "Default",
      "timestamp": "2022-12-04T15:47:41.998+04:00",
      "timestampEdited": "2022-12-04T15:50:22.76+04:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "ok sorry, I think it's better like this \uD83D\uDE04 \n```typescript\n// disable the proof verification to explicitly set the state\nlocal.setProofsEnabled(false);\n// set the zkApp state for test purposes\n// this one has three fields\n// actor_sk is a PrivateKey\nconst tx = await Mina.transaction(actor_sk, () => {            zkAppInstance.state1.set(Field(0));\n    zkAppInstance.state2.set(Field(0));\n    zkAppInstance.state3.set(Field(0));\n});\nawait tx.prove();\nawait tx.sign([actor_sk]);\nawait tx.send();\n// now re-enable the proofs verification to proceed\n// with the actual tests\nlocal.setProofsEnabled(true);\n// run your test here...\n```",
      "author": {
        "id": "281787111718518786",
        "name": "_renzokuken",
        "discriminator": "0000",
        "nickname": "renzokuken",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1049596462041935933",
      "type": "Default",
      "timestamp": "2022-12-06T12:01:37.11+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Guys, I think I need some help, so I set my state explicitly like this just for test purposes\n```typescript\nlocal.setProofsEnabled(false);\n    const tx = await Mina.transaction(zkAppPrivateKey, () => {\n      Circuit.asProver(() => {\n        zkAppInstance.commitment.assertEquals(zkAppInstance.commitment.get());\n        zkAppInstance.memory.assertEquals(zkAppInstance.memory.get());\n\n        zkAppInstance.automaton_state.set(Field(state_initial));\n        zkAppInstance.memory.set(Field(1));\n      });\n    });\n    await tx.prove();\n    await tx.sign([zkAppPrivateKey]);\n    await tx.send();\n    local.setProofsEnabled(true);\n```\nbut then in my smart contract methods fail at\n```typescript\nconst memory: Field = this.memory.get();\nthis.memory.assertEquals(memory);\n```\nso seems like it is causing some sort of state conflict",
      "author": {
        "id": "281787111718518786",
        "name": "_renzokuken",
        "discriminator": "0000",
        "nickname": "renzokuken",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1049967305439850507",
      "type": "Default",
      "timestamp": "2022-12-07T12:35:13.066+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Hey, sorry for being unclear -- disabling proofs is not a tool to bypass authorization. You still need to call your methods and authorize them with tx.prove() as usual. I just recommended this because it will get you to your target state more quickly, since the proofs created are not real and take 0 seconds. But it doesn't change anything about permissions and the usual flow you need for getting transactions accepted",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1049968452120616961",
      "type": "Default",
      "timestamp": "2022-12-07T12:39:46.456+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@renzokuken btw, `Circuit.asProver` is not intended for stuff like that. It's for doing stuff like debugging which would fail during compile. you also shouldn't need it outside a `@method`, at all",
      "author": {
        "id": "568421780331692042",
        "name": "mitschabaude",
        "discriminator": "0000",
        "nickname": "gregor",
        "color": "#6991D8",
        "isBot": false,
        "roles": [
          {
            "id": "751144417951219713",
            "name": "Core Engineers",
            "color": "#6991D8",
            "position": 122
          },
          {
            "id": "1075313326499823676",
            "name": "zkApp E2E Tester",
            "color": "#E74C3C",
            "position": 117
          },
          {
            "id": "916351299988107364",
            "name": "zkApps-bootcamp-2021",
            "color": "#F19924",
            "position": 95
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "281787111718518786",
          "name": "_renzokuken",
          "discriminator": "0000",
          "nickname": "renzokuken",
          "color": "#FA7504",
          "isBot": false,
          "roles": [
            {
              "id": "1182371055923376168",
              "name": "Mina Navigator",
              "color": "#FA7504",
              "position": 100
            },
            {
              "id": "931675496079585350",
              "name": "zkApp Builders Program - Cohort 1",
              "color": "#F37210",
              "position": 98
            },
            {
              "id": "1150768164850913322",
              "name": "zkIgnite Cohort 2",
              "color": "#E97404",
              "position": 96
            },
            {
              "id": "754653466344947782",
              "name": "QA Task Force",
              "color": "#B2F3B8",
              "position": 80
            }
          ],
          "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
        }
      ]
    },
    {
      "id": "1049971541259075624",
      "type": "Default",
      "timestamp": "2022-12-07T12:52:02.964+04:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thank you Gregor, I appreciate the instructions. I guess at this stage there really is no canonical way to bypass the permissions for test purposes, I’ll think of some ways and maybe I’ll contribute more to SnarkyJS and as for this project I’ll just continue with exhaustive full test suites. It takes more time but is actually closer to real life usage. Thanks again for hints!",
      "author": {
        "id": "281787111718518786",
        "name": "_renzokuken",
        "discriminator": "0000",
        "nickname": "renzokuken",
        "color": "#FA7504",
        "isBot": false,
        "roles": [
          {
            "id": "1182371055923376168",
            "name": "Mina Navigator",
            "color": "#FA7504",
            "position": 100
          },
          {
            "id": "931675496079585350",
            "name": "zkApp Builders Program - Cohort 1",
            "color": "#F37210",
            "position": 98
          },
          {
            "id": "1150768164850913322",
            "name": "zkIgnite Cohort 2",
            "color": "#E97404",
            "position": 96
          },
          {
            "id": "754653466344947782",
            "name": "QA Task Force",
            "color": "#B2F3B8",
            "position": 80
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/281787111718518786/faaa1929d3bb42886fd38b7833f07a31.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "568421780331692042",
              "name": "mitschabaude",
              "discriminator": "0000",
              "nickname": "gregor",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/568421780331692042/e1669a88013d05eb102f3e9b75279562.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    }
  ],
  "messageCount": 21
}